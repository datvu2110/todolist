{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"./Rectangle\", \"./Circle\", \"./CircleWarp\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.QuadTree = void 0;\n\n  const Rectangle_1 = require(\"./Rectangle\");\n\n  const Circle_1 = require(\"./Circle\");\n\n  const CircleWarp_1 = require(\"./CircleWarp\");\n\n  class QuadTree {\n    constructor(rectangle, capacity) {\n      this.rectangle = rectangle;\n      this.capacity = capacity;\n      this.points = [];\n      this.divided = false;\n    }\n\n    subdivide() {\n      const x = this.rectangle.position.x;\n      const y = this.rectangle.position.y;\n      const w = this.rectangle.size.width;\n      const h = this.rectangle.size.height;\n      const capacity = this.capacity;\n      this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n      this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n      this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n      this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n      this.divided = true;\n    }\n\n    insert(point) {\n      var _a, _b, _c, _d, _e;\n\n      if (!this.rectangle.contains(point.position)) {\n        return false;\n      }\n\n      if (this.points.length < this.capacity) {\n        this.points.push(point);\n        return true;\n      }\n\n      if (!this.divided) {\n        this.subdivide();\n      }\n\n      return (_e = ((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) || ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) || ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) || ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point))) !== null && _e !== void 0 ? _e : false;\n    }\n\n    queryCircle(position, radius) {\n      return this.query(new Circle_1.Circle(position.x, position.y, radius));\n    }\n\n    queryCircleWarp(position, radius, containerOrSize) {\n      const container = containerOrSize;\n      const size = containerOrSize;\n      return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n\n    queryRectangle(position, size) {\n      return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n    }\n\n    query(range, found) {\n      var _a, _b, _c, _d;\n\n      const res = found !== null && found !== void 0 ? found : [];\n\n      if (!range.intersects(this.rectangle)) {\n        return [];\n      } else {\n        for (const p of this.points) {\n          if (!range.contains(p.position)) {\n            continue;\n          }\n\n          res.push(p.particle);\n        }\n\n        if (this.divided) {\n          (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n          (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n          (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n          (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n        }\n      }\n\n      return res;\n    }\n\n  }\n\n  exports.QuadTree = QuadTree;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Utils/QuadTree.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","QuadTree","Rectangle_1","Circle_1","CircleWarp_1","constructor","rectangle","capacity","points","divided","subdivide","x","position","y","w","size","width","h","height","northEast","Rectangle","northWest","southEast","southWest","insert","point","_a","_b","_c","_d","_e","contains","length","push","queryCircle","radius","query","Circle","queryCircleWarp","containerOrSize","container","CircleWarp","canvas","queryRectangle","range","found","res","intersects","p","particle"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./Rectangle\", \"./Circle\", \"./CircleWarp\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.QuadTree = void 0;\n    const Rectangle_1 = require(\"./Rectangle\");\n    const Circle_1 = require(\"./Circle\");\n    const CircleWarp_1 = require(\"./CircleWarp\");\n    class QuadTree {\n        constructor(rectangle, capacity) {\n            this.rectangle = rectangle;\n            this.capacity = capacity;\n            this.points = [];\n            this.divided = false;\n        }\n        subdivide() {\n            const x = this.rectangle.position.x;\n            const y = this.rectangle.position.y;\n            const w = this.rectangle.size.width;\n            const h = this.rectangle.size.height;\n            const capacity = this.capacity;\n            this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n            this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n            this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n            this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n            this.divided = true;\n        }\n        insert(point) {\n            var _a, _b, _c, _d, _e;\n            if (!this.rectangle.contains(point.position)) {\n                return false;\n            }\n            if (this.points.length < this.capacity) {\n                this.points.push(point);\n                return true;\n            }\n            if (!this.divided) {\n                this.subdivide();\n            }\n            return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) || ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) || ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) || ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n        }\n        queryCircle(position, radius) {\n            return this.query(new Circle_1.Circle(position.x, position.y, radius));\n        }\n        queryCircleWarp(position, radius, containerOrSize) {\n            const container = containerOrSize;\n            const size = containerOrSize;\n            return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n        }\n        queryRectangle(position, size) {\n            return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n        }\n        query(range, found) {\n            var _a, _b, _c, _d;\n            const res = found !== null && found !== void 0 ? found : [];\n            if (!range.intersects(this.rectangle)) {\n                return [];\n            }\n            else {\n                for (const p of this.points) {\n                    if (!range.contains(p.position)) {\n                        continue;\n                    }\n                    res.push(p.particle);\n                }\n                if (this.divided) {\n                    (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n                    (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n                    (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n                    (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n                }\n            }\n            return res;\n        }\n    }\n    exports.QuadTree = QuadTree;\n});\n"]},"metadata":{},"sourceType":"script"}