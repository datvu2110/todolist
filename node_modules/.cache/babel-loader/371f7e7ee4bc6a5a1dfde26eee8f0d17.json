{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"./Rectangle\", \"./Circle\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.CircleWarp = void 0;\n\n  const Rectangle_1 = require(\"./Rectangle\");\n\n  const Circle_1 = require(\"./Circle\");\n\n  class CircleWarp extends Circle_1.Circle {\n    constructor(x, y, radius, canvasSize) {\n      super(x, y, radius);\n      this.canvasSize = canvasSize;\n      this.canvasSize = {\n        height: canvasSize.height,\n        width: canvasSize.width\n      };\n    }\n\n    contains(point) {\n      if (super.contains(point)) {\n        return true;\n      }\n\n      const posNE = {\n        x: point.x - this.canvasSize.width,\n        y: point.y\n      };\n\n      if (super.contains(posNE)) {\n        return true;\n      }\n\n      const posSE = {\n        x: point.x - this.canvasSize.width,\n        y: point.y - this.canvasSize.height\n      };\n\n      if (super.contains(posSE)) {\n        return true;\n      }\n\n      const posSW = {\n        x: point.x,\n        y: point.y - this.canvasSize.height\n      };\n      return super.contains(posSW);\n    }\n\n    intersects(range) {\n      if (super.intersects(range)) {\n        return true;\n      }\n\n      const rect = range;\n      const circle = range;\n      const newPos = {\n        x: range.position.x - this.canvasSize.width,\n        y: range.position.y - this.canvasSize.height\n      };\n\n      if (circle.radius !== undefined) {\n        const biggerCircle = new Circle_1.Circle(newPos.x, newPos.y, circle.radius * 2);\n        return super.intersects(biggerCircle);\n      } else if (rect.size !== undefined) {\n        const rectSW = new Rectangle_1.Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n        return super.intersects(rectSW);\n      }\n\n      return false;\n    }\n\n  }\n\n  exports.CircleWarp = CircleWarp;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Utils/CircleWarp.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","CircleWarp","Rectangle_1","Circle_1","Circle","constructor","x","y","radius","canvasSize","height","width","contains","point","posNE","posSE","posSW","intersects","range","rect","circle","newPos","position","biggerCircle","size","rectSW","Rectangle"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./Rectangle\", \"./Circle\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.CircleWarp = void 0;\n    const Rectangle_1 = require(\"./Rectangle\");\n    const Circle_1 = require(\"./Circle\");\n    class CircleWarp extends Circle_1.Circle {\n        constructor(x, y, radius, canvasSize) {\n            super(x, y, radius);\n            this.canvasSize = canvasSize;\n            this.canvasSize = {\n                height: canvasSize.height,\n                width: canvasSize.width,\n            };\n        }\n        contains(point) {\n            if (super.contains(point)) {\n                return true;\n            }\n            const posNE = {\n                x: point.x - this.canvasSize.width,\n                y: point.y,\n            };\n            if (super.contains(posNE)) {\n                return true;\n            }\n            const posSE = {\n                x: point.x - this.canvasSize.width,\n                y: point.y - this.canvasSize.height,\n            };\n            if (super.contains(posSE)) {\n                return true;\n            }\n            const posSW = {\n                x: point.x,\n                y: point.y - this.canvasSize.height,\n            };\n            return super.contains(posSW);\n        }\n        intersects(range) {\n            if (super.intersects(range)) {\n                return true;\n            }\n            const rect = range;\n            const circle = range;\n            const newPos = {\n                x: range.position.x - this.canvasSize.width,\n                y: range.position.y - this.canvasSize.height,\n            };\n            if (circle.radius !== undefined) {\n                const biggerCircle = new Circle_1.Circle(newPos.x, newPos.y, circle.radius * 2);\n                return super.intersects(biggerCircle);\n            }\n            else if (rect.size !== undefined) {\n                const rectSW = new Rectangle_1.Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n                return super.intersects(rectSW);\n            }\n            return false;\n        }\n    }\n    exports.CircleWarp = CircleWarp;\n});\n"]},"metadata":{},"sourceType":"script"}