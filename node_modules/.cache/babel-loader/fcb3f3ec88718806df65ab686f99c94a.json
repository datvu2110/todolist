{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"./InfectionStage\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Infection = void 0;\n\n  const InfectionStage_1 = require(\"./InfectionStage\");\n\n  class Infection {\n    constructor() {\n      this.cure = false;\n      this.delay = 0;\n      this.enable = false;\n      this.infections = 0;\n      this.stages = [];\n    }\n\n    load(data) {\n      if (data === undefined) {\n        return;\n      }\n\n      if (data.cure !== undefined) {\n        this.cure = data.cure;\n      }\n\n      if (data.delay !== undefined) {\n        this.delay = data.delay;\n      }\n\n      if (data.enable !== undefined) {\n        this.enable = data.enable;\n      }\n\n      if (data.infections !== undefined) {\n        this.infections = data.infections;\n      }\n\n      if (data.stages === undefined) {\n        return;\n      }\n\n      this.stages = data.stages.map(t => {\n        const s = new InfectionStage_1.InfectionStage();\n        s.load(t);\n        return s;\n      });\n    }\n\n  }\n\n  exports.Infection = Infection;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Options/Classes/Infection/Infection.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Infection","InfectionStage_1","constructor","cure","delay","enable","infections","stages","load","data","map","t","s","InfectionStage"],"mappings":"AAAA,CAAC,UAAUA,OAAV,EAAmB;AAChB,MAAI,OAAOC,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAM,CAACC,OAAd,KAA0B,QAA5D,EAAsE;AAClE,QAAIC,CAAC,GAAGH,OAAO,CAACI,OAAD,EAAUF,OAAV,CAAf;AACA,QAAIC,CAAC,KAAKE,SAAV,EAAqBJ,MAAM,CAACC,OAAP,GAAiBC,CAAjB;AACxB,GAHD,MAIK,IAAI,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AACjDD,IAAAA,MAAM,CAAC,CAAC,SAAD,EAAY,SAAZ,EAAuB,kBAAvB,CAAD,EAA6CN,OAA7C,CAAN;AACH;AACJ,CARD,EAQG,UAAUI,OAAV,EAAmBF,OAAnB,EAA4B;AAC3B;;AACAM,EAAAA,MAAM,CAACC,cAAP,CAAsBP,OAAtB,EAA+B,YAA/B,EAA6C;AAAEQ,IAAAA,KAAK,EAAE;AAAT,GAA7C;AACAR,EAAAA,OAAO,CAACS,SAAR,GAAoB,KAAK,CAAzB;;AACA,QAAMC,gBAAgB,GAAGR,OAAO,CAAC,kBAAD,CAAhC;;AACA,QAAMO,SAAN,CAAgB;AACZE,IAAAA,WAAW,GAAG;AACV,WAAKC,IAAL,GAAY,KAAZ;AACA,WAAKC,KAAL,GAAa,CAAb;AACA,WAAKC,MAAL,GAAc,KAAd;AACA,WAAKC,UAAL,GAAkB,CAAlB;AACA,WAAKC,MAAL,GAAc,EAAd;AACH;;AACDC,IAAAA,IAAI,CAACC,IAAD,EAAO;AACP,UAAIA,IAAI,KAAKf,SAAb,EAAwB;AACpB;AACH;;AACD,UAAIe,IAAI,CAACN,IAAL,KAAcT,SAAlB,EAA6B;AACzB,aAAKS,IAAL,GAAYM,IAAI,CAACN,IAAjB;AACH;;AACD,UAAIM,IAAI,CAACL,KAAL,KAAeV,SAAnB,EAA8B;AAC1B,aAAKU,KAAL,GAAaK,IAAI,CAACL,KAAlB;AACH;;AACD,UAAIK,IAAI,CAACJ,MAAL,KAAgBX,SAApB,EAA+B;AAC3B,aAAKW,MAAL,GAAcI,IAAI,CAACJ,MAAnB;AACH;;AACD,UAAII,IAAI,CAACH,UAAL,KAAoBZ,SAAxB,EAAmC;AAC/B,aAAKY,UAAL,GAAkBG,IAAI,CAACH,UAAvB;AACH;;AACD,UAAIG,IAAI,CAACF,MAAL,KAAgBb,SAApB,EAA+B;AAC3B;AACH;;AACD,WAAKa,MAAL,GAAcE,IAAI,CAACF,MAAL,CAAYG,GAAZ,CAAiBC,CAAD,IAAO;AACjC,cAAMC,CAAC,GAAG,IAAIX,gBAAgB,CAACY,cAArB,EAAV;AACAD,QAAAA,CAAC,CAACJ,IAAF,CAAOG,CAAP;AACA,eAAOC,CAAP;AACH,OAJa,CAAd;AAKH;;AAhCW;;AAkChBrB,EAAAA,OAAO,CAACS,SAAR,GAAoBA,SAApB;AACH,CAhDD","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./InfectionStage\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Infection = void 0;\n    const InfectionStage_1 = require(\"./InfectionStage\");\n    class Infection {\n        constructor() {\n            this.cure = false;\n            this.delay = 0;\n            this.enable = false;\n            this.infections = 0;\n            this.stages = [];\n        }\n        load(data) {\n            if (data === undefined) {\n                return;\n            }\n            if (data.cure !== undefined) {\n                this.cure = data.cure;\n            }\n            if (data.delay !== undefined) {\n                this.delay = data.delay;\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.infections !== undefined) {\n                this.infections = data.infections;\n            }\n            if (data.stages === undefined) {\n                return;\n            }\n            this.stages = data.stages.map((t) => {\n                const s = new InfectionStage_1.InfectionStage();\n                s.load(t);\n                return s;\n            });\n        }\n    }\n    exports.Infection = Infection;\n});\n"]},"metadata":{},"sourceType":"script"}