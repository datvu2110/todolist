{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"../Utils\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Retina = void 0;\n\n  const Utils_1 = require(\"../Utils\");\n\n  class Retina {\n    constructor(container) {\n      this.container = container;\n    }\n\n    init() {\n      const container = this.container;\n      const options = container.options;\n\n      if (options.detectRetina) {\n        this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n      } else {\n        this.pixelRatio = 1;\n      }\n\n      const motionOptions = this.container.options.motion;\n\n      if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n        if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n          this.reduceFactor = 1;\n        } else {\n          const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n\n          if (mediaQuery) {\n            this.handleMotionChange(mediaQuery);\n\n            const handleChange = () => {\n              this.handleMotionChange(mediaQuery);\n              container.refresh().catch(() => {});\n            };\n\n            if (mediaQuery.addEventListener !== undefined) {\n              mediaQuery.addEventListener(\"change\", handleChange);\n            } else if (mediaQuery.addListener !== undefined) {\n              mediaQuery.addListener(handleChange);\n            }\n          }\n        }\n      } else {\n        this.reduceFactor = 1;\n      }\n\n      const ratio = this.pixelRatio;\n\n      if (container.canvas.element) {\n        const element = container.canvas.element;\n        container.canvas.size.width = element.offsetWidth * ratio;\n        container.canvas.size.height = element.offsetHeight * ratio;\n      }\n\n      const particles = options.particles;\n      this.linksDistance = particles.links.distance * ratio;\n      this.linksWidth = particles.links.width * ratio;\n      this.moveSpeed = particles.move.speed * ratio;\n      this.sizeValue = particles.size.value * ratio;\n      this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n      const modes = options.interactivity.modes;\n      this.connectModeDistance = modes.connect.distance * ratio;\n      this.connectModeRadius = modes.connect.radius * ratio;\n      this.grabModeDistance = modes.grab.distance * ratio;\n      this.repulseModeDistance = modes.repulse.distance * ratio;\n      this.bounceModeDistance = modes.bounce.distance * ratio;\n      this.attractModeDistance = modes.attract.distance * ratio;\n      this.slowModeRadius = modes.slow.radius * ratio;\n      this.bubbleModeDistance = modes.bubble.distance * ratio;\n\n      if (modes.bubble.size) {\n        this.bubbleModeSize = modes.bubble.size * ratio;\n      }\n    }\n\n    initParticle(particle) {\n      const particlesOptions = particle.particlesOptions;\n      const ratio = this.pixelRatio;\n      particle.linksDistance = particlesOptions.links.distance * ratio;\n      particle.linksWidth = particlesOptions.links.width * ratio;\n      particle.moveSpeed = particlesOptions.move.speed * ratio;\n      particle.sizeValue = particlesOptions.size.value * ratio;\n      particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n      particle.maxDistance = particlesOptions.move.distance * ratio;\n    }\n\n    handleMotionChange(mediaQuery) {\n      const options = this.container.options;\n\n      if (mediaQuery.matches) {\n        const motion = options.motion;\n        this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n      } else {\n        this.reduceFactor = 1;\n      }\n    }\n\n  }\n\n  exports.Retina = Retina;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Core/Retina.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Retina","Utils_1","constructor","container","init","options","detectRetina","pixelRatio","Utils","isSsr","window","devicePixelRatio","motionOptions","motion","disable","reduce","matchMedia","reduceFactor","mediaQuery","handleMotionChange","handleChange","refresh","catch","addEventListener","addListener","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","linksDistance","links","distance","linksWidth","moveSpeed","move","speed","sizeValue","sizeAnimationSpeed","animation","modes","interactivity","connectModeDistance","connect","connectModeRadius","radius","grabModeDistance","grab","repulseModeDistance","repulse","bounceModeDistance","bounce","attractModeDistance","attract","slowModeRadius","slow","bubbleModeDistance","bubble","bubbleModeSize","initParticle","particle","particlesOptions","maxDistance","matches","factor"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../Utils\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Retina = void 0;\n    const Utils_1 = require(\"../Utils\");\n    class Retina {\n        constructor(container) {\n            this.container = container;\n        }\n        init() {\n            const container = this.container;\n            const options = container.options;\n            if (options.detectRetina) {\n                this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n            }\n            else {\n                this.pixelRatio = 1;\n            }\n            const motionOptions = this.container.options.motion;\n            if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n                if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n                    this.reduceFactor = 1;\n                }\n                else {\n                    const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n                    if (mediaQuery) {\n                        this.handleMotionChange(mediaQuery);\n                        const handleChange = () => {\n                            this.handleMotionChange(mediaQuery);\n                            container.refresh().catch(() => {\n                            });\n                        };\n                        if (mediaQuery.addEventListener !== undefined) {\n                            mediaQuery.addEventListener(\"change\", handleChange);\n                        }\n                        else if (mediaQuery.addListener !== undefined) {\n                            mediaQuery.addListener(handleChange);\n                        }\n                    }\n                }\n            }\n            else {\n                this.reduceFactor = 1;\n            }\n            const ratio = this.pixelRatio;\n            if (container.canvas.element) {\n                const element = container.canvas.element;\n                container.canvas.size.width = element.offsetWidth * ratio;\n                container.canvas.size.height = element.offsetHeight * ratio;\n            }\n            const particles = options.particles;\n            this.linksDistance = particles.links.distance * ratio;\n            this.linksWidth = particles.links.width * ratio;\n            this.moveSpeed = particles.move.speed * ratio;\n            this.sizeValue = particles.size.value * ratio;\n            this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n            const modes = options.interactivity.modes;\n            this.connectModeDistance = modes.connect.distance * ratio;\n            this.connectModeRadius = modes.connect.radius * ratio;\n            this.grabModeDistance = modes.grab.distance * ratio;\n            this.repulseModeDistance = modes.repulse.distance * ratio;\n            this.bounceModeDistance = modes.bounce.distance * ratio;\n            this.attractModeDistance = modes.attract.distance * ratio;\n            this.slowModeRadius = modes.slow.radius * ratio;\n            this.bubbleModeDistance = modes.bubble.distance * ratio;\n            if (modes.bubble.size) {\n                this.bubbleModeSize = modes.bubble.size * ratio;\n            }\n        }\n        initParticle(particle) {\n            const particlesOptions = particle.particlesOptions;\n            const ratio = this.pixelRatio;\n            particle.linksDistance = particlesOptions.links.distance * ratio;\n            particle.linksWidth = particlesOptions.links.width * ratio;\n            particle.moveSpeed = particlesOptions.move.speed * ratio;\n            particle.sizeValue = particlesOptions.size.value * ratio;\n            particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n            particle.maxDistance = particlesOptions.move.distance * ratio;\n        }\n        handleMotionChange(mediaQuery) {\n            const options = this.container.options;\n            if (mediaQuery.matches) {\n                const motion = options.motion;\n                this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n            }\n            else {\n                this.reduceFactor = 1;\n            }\n        }\n    }\n    exports.Retina = Retina;\n});\n"]},"metadata":{},"sourceType":"script"}