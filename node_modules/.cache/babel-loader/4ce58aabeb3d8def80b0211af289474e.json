{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"../../Utils\", \"../../Enums\", \"./Options/Classes/EmitterSize\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.EmitterInstance = void 0;\n\n  const Utils_1 = require(\"../../Utils\");\n\n  const Enums_1 = require(\"../../Enums\");\n\n  const EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\n\n  function randomCoordinate(position, offset) {\n    return position + offset * (Math.random() - 0.5);\n  }\n\n  function randomPosition(position, offset) {\n    return {\n      x: randomCoordinate(position.x, offset.x),\n      y: randomCoordinate(position.y, offset.y)\n    };\n  }\n\n  class EmitterInstance {\n    constructor(emitters, container, emitterOptions, position) {\n      var _a, _b, _c;\n\n      this.emitters = emitters;\n      this.container = container;\n      this.initialPosition = position;\n      this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n      this.position = (_a = this.initialPosition) !== null && _a !== void 0 ? _a : this.calcPosition();\n      let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n\n      if (particlesOptions === undefined) {\n        particlesOptions = {};\n      }\n\n      if (particlesOptions.move === undefined) {\n        particlesOptions.move = {};\n      }\n\n      if (particlesOptions.move.direction === undefined) {\n        particlesOptions.move.direction = this.emitterOptions.direction;\n      }\n\n      this.particlesOptions = particlesOptions;\n      this.size = (_b = this.emitterOptions.size) !== null && _b !== void 0 ? _b : (() => {\n        const size = new EmitterSize_1.EmitterSize();\n        size.load({\n          height: 0,\n          mode: Enums_1.SizeMode.percent,\n          width: 0\n        });\n        return size;\n      })();\n      this.lifeCount = (_c = this.emitterOptions.life.count) !== null && _c !== void 0 ? _c : -1;\n      this.immortal = this.lifeCount <= 0;\n      this.play();\n    }\n\n    play() {\n      if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n        if (this.startInterval === undefined) {\n          const delay = 1000 * this.emitterOptions.rate.delay / this.container.retina.reduceFactor;\n          this.startInterval = window.setInterval(() => {\n            this.emit();\n          }, delay);\n        }\n\n        if (this.lifeCount > 0 || this.immortal) {\n          this.prepareToDie();\n        }\n      }\n    }\n\n    pause() {\n      const interval = this.startInterval;\n\n      if (interval !== undefined) {\n        clearInterval(interval);\n        delete this.startInterval;\n      }\n    }\n\n    resize() {\n      const initialPosition = this.initialPosition;\n      this.position = initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n    }\n\n    prepareToDie() {\n      var _a;\n\n      const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n\n      if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal) && duration !== undefined && duration > 0) {\n        setTimeout(() => {\n          var _a;\n\n          this.pause();\n\n          if (!this.immortal) {\n            this.lifeCount--;\n          }\n\n          if (this.lifeCount > 0 || this.immortal) {\n            this.position = this.calcPosition();\n            setTimeout(() => {\n              this.play();\n            }, ((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor);\n          } else {\n            this.destroy();\n          }\n        }, duration * 1000);\n      }\n    }\n\n    destroy() {\n      this.emitters.removeEmitter(this);\n    }\n\n    calcPosition() {\n      var _a, _b;\n\n      const container = this.container;\n      const percentPosition = this.emitterOptions.position;\n      return {\n        x: ((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width,\n        y: ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height\n      };\n    }\n\n    emit() {\n      const container = this.container;\n      const position = this.position;\n      const offset = {\n        x: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n        y: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.height * this.size.height / 100 : this.size.height\n      };\n\n      for (let i = 0; i < this.emitterOptions.rate.quantity; i++) {\n        container.particles.addParticle(randomPosition(position, offset), this.particlesOptions);\n      }\n    }\n\n  }\n\n  exports.EmitterInstance = EmitterInstance;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Plugins/Emitters/EmitterInstance.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","EmitterInstance","Utils_1","Enums_1","EmitterSize_1","randomCoordinate","position","offset","Math","random","randomPosition","x","y","constructor","emitters","container","emitterOptions","_a","_b","_c","initialPosition","Utils","deepExtend","calcPosition","particlesOptions","particles","move","direction","size","EmitterSize","load","height","mode","SizeMode","percent","width","lifeCount","life","count","immortal","play","retina","reduceFactor","startInterval","delay","rate","window","setInterval","emit","prepareToDie","pause","interval","clearInterval","resize","isPointInside","canvas","duration","setTimeout","destroy","removeEmitter","percentPosition","i","quantity","addParticle"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../../Utils\", \"../../Enums\", \"./Options/Classes/EmitterSize\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.EmitterInstance = void 0;\n    const Utils_1 = require(\"../../Utils\");\n    const Enums_1 = require(\"../../Enums\");\n    const EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\n    function randomCoordinate(position, offset) {\n        return position + offset * (Math.random() - 0.5);\n    }\n    function randomPosition(position, offset) {\n        return {\n            x: randomCoordinate(position.x, offset.x),\n            y: randomCoordinate(position.y, offset.y),\n        };\n    }\n    class EmitterInstance {\n        constructor(emitters, container, emitterOptions, position) {\n            var _a, _b, _c;\n            this.emitters = emitters;\n            this.container = container;\n            this.initialPosition = position;\n            this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n            this.position = (_a = this.initialPosition) !== null && _a !== void 0 ? _a : this.calcPosition();\n            let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n            if (particlesOptions === undefined) {\n                particlesOptions = {};\n            }\n            if (particlesOptions.move === undefined) {\n                particlesOptions.move = {};\n            }\n            if (particlesOptions.move.direction === undefined) {\n                particlesOptions.move.direction = this.emitterOptions.direction;\n            }\n            this.particlesOptions = particlesOptions;\n            this.size = (_b = this.emitterOptions.size) !== null && _b !== void 0 ? _b : (() => {\n                const size = new EmitterSize_1.EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: Enums_1.SizeMode.percent,\n                    width: 0,\n                });\n                return size;\n            })();\n            this.lifeCount = (_c = this.emitterOptions.life.count) !== null && _c !== void 0 ? _c : -1;\n            this.immortal = this.lifeCount <= 0;\n            this.play();\n        }\n        play() {\n            if (this.container.retina.reduceFactor &&\n                (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n                if (this.startInterval === undefined) {\n                    const delay = (1000 * this.emitterOptions.rate.delay) / this.container.retina.reduceFactor;\n                    this.startInterval = window.setInterval(() => {\n                        this.emit();\n                    }, delay);\n                }\n                if (this.lifeCount > 0 || this.immortal) {\n                    this.prepareToDie();\n                }\n            }\n        }\n        pause() {\n            const interval = this.startInterval;\n            if (interval !== undefined) {\n                clearInterval(interval);\n                delete this.startInterval;\n            }\n        }\n        resize() {\n            const initialPosition = this.initialPosition;\n            this.position =\n                initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                    ? initialPosition\n                    : this.calcPosition();\n        }\n        prepareToDie() {\n            var _a;\n            const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n            if (this.container.retina.reduceFactor &&\n                (this.lifeCount > 0 || this.immortal) &&\n                duration !== undefined &&\n                duration > 0) {\n                setTimeout(() => {\n                    var _a;\n                    this.pause();\n                    if (!this.immortal) {\n                        this.lifeCount--;\n                    }\n                    if (this.lifeCount > 0 || this.immortal) {\n                        this.position = this.calcPosition();\n                        setTimeout(() => {\n                            this.play();\n                        }, (((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor);\n                    }\n                    else {\n                        this.destroy();\n                    }\n                }, duration * 1000);\n            }\n        }\n        destroy() {\n            this.emitters.removeEmitter(this);\n        }\n        calcPosition() {\n            var _a, _b;\n            const container = this.container;\n            const percentPosition = this.emitterOptions.position;\n            return {\n                x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n                y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n            };\n        }\n        emit() {\n            const container = this.container;\n            const position = this.position;\n            const offset = {\n                x: this.size.mode === Enums_1.SizeMode.percent\n                    ? (container.canvas.size.width * this.size.width) / 100\n                    : this.size.width,\n                y: this.size.mode === Enums_1.SizeMode.percent\n                    ? (container.canvas.size.height * this.size.height) / 100\n                    : this.size.height,\n            };\n            for (let i = 0; i < this.emitterOptions.rate.quantity; i++) {\n                container.particles.addParticle(randomPosition(position, offset), this.particlesOptions);\n            }\n        }\n    }\n    exports.EmitterInstance = EmitterInstance;\n});\n"]},"metadata":{},"sourceType":"script"}