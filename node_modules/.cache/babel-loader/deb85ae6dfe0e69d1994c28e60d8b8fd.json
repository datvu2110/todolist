{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"./Attract\", \"../../../../Enums\", \"./Trail\", \"./Noise/Noise\", \"./MoveAngle\", \"./MoveGravity\", \"./OutModes\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Move = void 0;\n\n  const Attract_1 = require(\"./Attract\");\n\n  const Enums_1 = require(\"../../../../Enums\");\n\n  const Trail_1 = require(\"./Trail\");\n\n  const Noise_1 = require(\"./Noise/Noise\");\n\n  const MoveAngle_1 = require(\"./MoveAngle\");\n\n  const MoveGravity_1 = require(\"./MoveGravity\");\n\n  const OutModes_1 = require(\"./OutModes\");\n\n  class Move {\n    constructor() {\n      this.angle = new MoveAngle_1.MoveAngle();\n      this.attract = new Attract_1.Attract();\n      this.direction = Enums_1.MoveDirection.none;\n      this.distance = 0;\n      this.enable = false;\n      this.gravity = new MoveGravity_1.MoveGravity();\n      this.noise = new Noise_1.Noise();\n      this.outModes = new OutModes_1.OutModes();\n      this.random = false;\n      this.size = false;\n      this.speed = 2;\n      this.straight = false;\n      this.trail = new Trail_1.Trail();\n      this.vibrate = false;\n      this.warp = false;\n    }\n\n    get collisions() {\n      return false;\n    }\n\n    set collisions(value) {}\n\n    get bounce() {\n      return this.collisions;\n    }\n\n    set bounce(value) {\n      this.collisions = value;\n    }\n\n    get out_mode() {\n      return this.outMode;\n    }\n\n    set out_mode(value) {\n      this.outMode = value;\n    }\n\n    get outMode() {\n      return this.outModes.default;\n    }\n\n    set outMode(value) {\n      this.outModes.default = value;\n    }\n\n    load(data) {\n      var _a, _b;\n\n      if (data === undefined) {\n        return;\n      }\n\n      if (data.angle !== undefined) {\n        if (typeof data.angle === \"number\") {\n          this.angle.value = data.angle;\n        } else {\n          this.angle.load(data.angle);\n        }\n      }\n\n      this.attract.load(data.attract);\n\n      if (data.direction !== undefined) {\n        this.direction = data.direction;\n      }\n\n      if (data.distance !== undefined) {\n        this.distance = data.distance;\n      }\n\n      if (data.enable !== undefined) {\n        this.enable = data.enable;\n      }\n\n      this.gravity.load(data.gravity);\n      this.noise.load(data.noise);\n      const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n\n      if (data.outModes !== undefined || outMode !== undefined) {\n        if (typeof data.outModes === \"string\" || data.outModes === undefined && outMode !== undefined) {\n          this.outModes.load({\n            default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode\n          });\n        } else {\n          this.outModes.load(data.outModes);\n        }\n      }\n\n      if (data.random !== undefined) {\n        this.random = data.random;\n      }\n\n      if (data.size !== undefined) {\n        this.size = data.size;\n      }\n\n      if (data.speed !== undefined) {\n        this.speed = data.speed;\n      }\n\n      if (data.straight !== undefined) {\n        this.straight = data.straight;\n      }\n\n      this.trail.load(data.trail);\n\n      if (data.vibrate !== undefined) {\n        this.vibrate = data.vibrate;\n      }\n\n      if (data.warp !== undefined) {\n        this.warp = data.warp;\n      }\n    }\n\n  }\n\n  exports.Move = Move;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Options/Classes/Particles/Move/Move.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Move","Attract_1","Enums_1","Trail_1","Noise_1","MoveAngle_1","MoveGravity_1","OutModes_1","constructor","angle","MoveAngle","attract","Attract","direction","MoveDirection","none","distance","enable","gravity","MoveGravity","noise","Noise","outModes","OutModes","random","size","speed","straight","trail","Trail","vibrate","warp","collisions","bounce","out_mode","outMode","default","load","data","_a","_b"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./Attract\", \"../../../../Enums\", \"./Trail\", \"./Noise/Noise\", \"./MoveAngle\", \"./MoveGravity\", \"./OutModes\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Move = void 0;\n    const Attract_1 = require(\"./Attract\");\n    const Enums_1 = require(\"../../../../Enums\");\n    const Trail_1 = require(\"./Trail\");\n    const Noise_1 = require(\"./Noise/Noise\");\n    const MoveAngle_1 = require(\"./MoveAngle\");\n    const MoveGravity_1 = require(\"./MoveGravity\");\n    const OutModes_1 = require(\"./OutModes\");\n    class Move {\n        constructor() {\n            this.angle = new MoveAngle_1.MoveAngle();\n            this.attract = new Attract_1.Attract();\n            this.direction = Enums_1.MoveDirection.none;\n            this.distance = 0;\n            this.enable = false;\n            this.gravity = new MoveGravity_1.MoveGravity();\n            this.noise = new Noise_1.Noise();\n            this.outModes = new OutModes_1.OutModes();\n            this.random = false;\n            this.size = false;\n            this.speed = 2;\n            this.straight = false;\n            this.trail = new Trail_1.Trail();\n            this.vibrate = false;\n            this.warp = false;\n        }\n        get collisions() {\n            return false;\n        }\n        set collisions(value) {\n        }\n        get bounce() {\n            return this.collisions;\n        }\n        set bounce(value) {\n            this.collisions = value;\n        }\n        get out_mode() {\n            return this.outMode;\n        }\n        set out_mode(value) {\n            this.outMode = value;\n        }\n        get outMode() {\n            return this.outModes.default;\n        }\n        set outMode(value) {\n            this.outModes.default = value;\n        }\n        load(data) {\n            var _a, _b;\n            if (data === undefined) {\n                return;\n            }\n            if (data.angle !== undefined) {\n                if (typeof data.angle === \"number\") {\n                    this.angle.value = data.angle;\n                }\n                else {\n                    this.angle.load(data.angle);\n                }\n            }\n            this.attract.load(data.attract);\n            if (data.direction !== undefined) {\n                this.direction = data.direction;\n            }\n            if (data.distance !== undefined) {\n                this.distance = data.distance;\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            this.gravity.load(data.gravity);\n            this.noise.load(data.noise);\n            const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n            if (data.outModes !== undefined || outMode !== undefined) {\n                if (typeof data.outModes === \"string\" || (data.outModes === undefined && outMode !== undefined)) {\n                    this.outModes.load({\n                        default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode,\n                    });\n                }\n                else {\n                    this.outModes.load(data.outModes);\n                }\n            }\n            if (data.random !== undefined) {\n                this.random = data.random;\n            }\n            if (data.size !== undefined) {\n                this.size = data.size;\n            }\n            if (data.speed !== undefined) {\n                this.speed = data.speed;\n            }\n            if (data.straight !== undefined) {\n                this.straight = data.straight;\n            }\n            this.trail.load(data.trail);\n            if (data.vibrate !== undefined) {\n                this.vibrate = data.vibrate;\n            }\n            if (data.warp !== undefined) {\n                this.warp = data.warp;\n            }\n        }\n    }\n    exports.Move = Move;\n});\n"]},"metadata":{},"sourceType":"script"}