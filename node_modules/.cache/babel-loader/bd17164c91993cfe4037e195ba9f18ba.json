{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"../../Utils\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Attractor = void 0;\n\n  const Utils_1 = require(\"../../Utils\");\n\n  class Attractor {\n    constructor(container) {\n      this.container = container;\n    }\n\n    interact(p1) {\n      var _a;\n\n      const container = this.container;\n      const distance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n      const pos1 = p1.getPosition();\n      const query = container.particles.quadTree.queryCircle(pos1, distance);\n\n      for (const p2 of query) {\n        if (p1 === p2 || !p2.particlesOptions.move.attract.enable || p2.destroyed || p2.spawning) {\n          continue;\n        }\n\n        const pos2 = p2.getPosition();\n        const {\n          dx,\n          dy\n        } = Utils_1.NumberUtils.getDistances(pos1, pos2);\n        const rotate = p1.particlesOptions.move.attract.rotate;\n        const ax = dx / (rotate.x * 1000);\n        const ay = dy / (rotate.y * 1000);\n        p1.velocity.horizontal -= ax;\n        p1.velocity.vertical -= ay;\n        p2.velocity.horizontal += ax;\n        p2.velocity.vertical += ay;\n      }\n    }\n\n    isEnabled(particle) {\n      return particle.particlesOptions.move.attract.enable;\n    }\n\n    reset() {}\n\n  }\n\n  exports.Attractor = Attractor;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Interactions/Particles/Attractor.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Attractor","Utils_1","constructor","container","interact","p1","_a","distance","linksDistance","retina","pos1","getPosition","query","particles","quadTree","queryCircle","p2","particlesOptions","move","attract","enable","destroyed","spawning","pos2","dx","dy","NumberUtils","getDistances","rotate","ax","x","ay","y","velocity","horizontal","vertical","isEnabled","particle","reset"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../../Utils\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Attractor = void 0;\n    const Utils_1 = require(\"../../Utils\");\n    class Attractor {\n        constructor(container) {\n            this.container = container;\n        }\n        interact(p1) {\n            var _a;\n            const container = this.container;\n            const distance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n            const pos1 = p1.getPosition();\n            const query = container.particles.quadTree.queryCircle(pos1, distance);\n            for (const p2 of query) {\n                if (p1 === p2 || !p2.particlesOptions.move.attract.enable || p2.destroyed || p2.spawning) {\n                    continue;\n                }\n                const pos2 = p2.getPosition();\n                const { dx, dy } = Utils_1.NumberUtils.getDistances(pos1, pos2);\n                const rotate = p1.particlesOptions.move.attract.rotate;\n                const ax = dx / (rotate.x * 1000);\n                const ay = dy / (rotate.y * 1000);\n                p1.velocity.horizontal -= ax;\n                p1.velocity.vertical -= ay;\n                p2.velocity.horizontal += ax;\n                p2.velocity.vertical += ay;\n            }\n        }\n        isEnabled(particle) {\n            return particle.particlesOptions.move.attract.enable;\n        }\n        reset() {\n        }\n    }\n    exports.Attractor = Attractor;\n});\n"]},"metadata":{},"sourceType":"script"}