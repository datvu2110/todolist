{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"./EmitterInstance\", \"../../Utils\", \"./Options/Classes/Emitter\", \"./Enums\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Emitters = void 0;\n\n  const EmitterInstance_1 = require(\"./EmitterInstance\");\n\n  const Utils_1 = require(\"../../Utils\");\n\n  const Emitter_1 = require(\"./Options/Classes/Emitter\");\n\n  const Enums_1 = require(\"./Enums\");\n\n  class Emitters {\n    constructor(container) {\n      this.container = container;\n      this.array = [];\n      this.emitters = [];\n      this.interactivityEmitters = [];\n      const overridableContainer = container;\n\n      overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n    }\n\n    init(options) {\n      var _a, _b;\n\n      if (!options) {\n        return;\n      }\n\n      if (options.emitters) {\n        if (options.emitters instanceof Array) {\n          this.emitters = options.emitters.map(s => {\n            const tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.emitters instanceof Array) {\n            this.emitters = new Emitter_1.Emitter();\n          }\n\n          this.emitters.load(options.emitters);\n        }\n      }\n\n      const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n\n      if (interactivityEmitters) {\n        if (interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = interactivityEmitters.map(s => {\n            const tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.interactivityEmitters instanceof Array) {\n            this.interactivityEmitters = new Emitter_1.Emitter();\n          }\n\n          this.interactivityEmitters.load(interactivityEmitters);\n        }\n      }\n\n      if (this.emitters instanceof Array) {\n        for (const emitterOptions of this.emitters) {\n          this.addEmitter(emitterOptions);\n        }\n      } else {\n        this.addEmitter(this.emitters);\n      }\n    }\n\n    play() {\n      for (const emitter of this.array) {\n        emitter.play();\n      }\n    }\n\n    pause() {\n      for (const emitter of this.array) {\n        emitter.pause();\n      }\n    }\n\n    stop() {\n      this.array = [];\n    }\n\n    handleClickMode(mode) {\n      const container = this.container;\n      const emitterOptions = this.emitters;\n      const modeEmitters = this.interactivityEmitters;\n\n      if (mode === Enums_1.EmitterClickMode.emitter) {\n        let emitterModeOptions;\n\n        if (modeEmitters instanceof Array) {\n          if (modeEmitters.length > 0) {\n            emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n          }\n        } else {\n          emitterModeOptions = modeEmitters;\n        }\n\n        const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions;\n        const ePosition = container.interactivity.mouse.clickPosition;\n        this.addEmitter(Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n      }\n    }\n\n    resize() {\n      for (const emitter of this.array) {\n        emitter.resize();\n      }\n    }\n\n    addEmitter(options, position) {\n      const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n      this.array.push(emitter);\n      return emitter;\n    }\n\n    removeEmitter(emitter) {\n      const index = this.array.indexOf(emitter);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n\n  }\n\n  exports.Emitters = Emitters;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Plugins/Emitters/Emitters.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Emitters","EmitterInstance_1","Utils_1","Emitter_1","Enums_1","constructor","container","array","emitters","interactivityEmitters","overridableContainer","addEmitter","options","position","init","_a","_b","Array","map","s","tmp","Emitter","load","interactivity","modes","emitterOptions","play","emitter","pause","stop","handleClickMode","mode","modeEmitters","EmitterClickMode","emitterModeOptions","length","Utils","itemFromArray","emittersOptions","ePosition","mouse","clickPosition","deepExtend","resize","EmitterInstance","push","removeEmitter","index","indexOf","splice"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./EmitterInstance\", \"../../Utils\", \"./Options/Classes/Emitter\", \"./Enums\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Emitters = void 0;\n    const EmitterInstance_1 = require(\"./EmitterInstance\");\n    const Utils_1 = require(\"../../Utils\");\n    const Emitter_1 = require(\"./Options/Classes/Emitter\");\n    const Enums_1 = require(\"./Enums\");\n    class Emitters {\n        constructor(container) {\n            this.container = container;\n            this.array = [];\n            this.emitters = [];\n            this.interactivityEmitters = [];\n            const overridableContainer = container;\n            overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n        }\n        init(options) {\n            var _a, _b;\n            if (!options) {\n                return;\n            }\n            if (options.emitters) {\n                if (options.emitters instanceof Array) {\n                    this.emitters = options.emitters.map((s) => {\n                        const tmp = new Emitter_1.Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    });\n                }\n                else {\n                    if (this.emitters instanceof Array) {\n                        this.emitters = new Emitter_1.Emitter();\n                    }\n                    this.emitters.load(options.emitters);\n                }\n            }\n            const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n            if (interactivityEmitters) {\n                if (interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = interactivityEmitters.map((s) => {\n                        const tmp = new Emitter_1.Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    });\n                }\n                else {\n                    if (this.interactivityEmitters instanceof Array) {\n                        this.interactivityEmitters = new Emitter_1.Emitter();\n                    }\n                    this.interactivityEmitters.load(interactivityEmitters);\n                }\n            }\n            if (this.emitters instanceof Array) {\n                for (const emitterOptions of this.emitters) {\n                    this.addEmitter(emitterOptions);\n                }\n            }\n            else {\n                this.addEmitter(this.emitters);\n            }\n        }\n        play() {\n            for (const emitter of this.array) {\n                emitter.play();\n            }\n        }\n        pause() {\n            for (const emitter of this.array) {\n                emitter.pause();\n            }\n        }\n        stop() {\n            this.array = [];\n        }\n        handleClickMode(mode) {\n            const container = this.container;\n            const emitterOptions = this.emitters;\n            const modeEmitters = this.interactivityEmitters;\n            if (mode === Enums_1.EmitterClickMode.emitter) {\n                let emitterModeOptions;\n                if (modeEmitters instanceof Array) {\n                    if (modeEmitters.length > 0) {\n                        emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n                    }\n                }\n                else {\n                    emitterModeOptions = modeEmitters;\n                }\n                const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions);\n                const ePosition = container.interactivity.mouse.clickPosition;\n                this.addEmitter(Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n            }\n        }\n        resize() {\n            for (const emitter of this.array) {\n                emitter.resize();\n            }\n        }\n        addEmitter(options, position) {\n            const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n            this.array.push(emitter);\n            return emitter;\n        }\n        removeEmitter(emitter) {\n            const index = this.array.indexOf(emitter);\n            if (index >= 0) {\n                this.array.splice(index, 1);\n            }\n        }\n    }\n    exports.Emitters = Emitters;\n});\n"]},"metadata":{},"sourceType":"script"}