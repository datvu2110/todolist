{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"../../Utils\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AbsorberInstance = void 0;\n\n  const Utils_1 = require(\"../../Utils\");\n\n  class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n      var _a, _b;\n\n      this.absorbers = absorbers;\n      this.container = container;\n      this.initialPosition = position;\n      this.options = options;\n      this.dragging = false;\n      this.opacity = this.options.opacity;\n      this.size = Utils_1.NumberUtils.getValue(options.size) * container.retina.pixelRatio;\n      this.mass = this.size * options.size.density * container.retina.reduceFactor;\n      const limit = options.size.limit;\n      this.limit = limit !== undefined ? limit * container.retina.pixelRatio * container.retina.reduceFactor : limit;\n      const color = typeof options.color === \"string\" ? {\n        value: options.color\n      } : options.color;\n      this.color = (_a = Utils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n        b: 0,\n        g: 0,\n        r: 0\n      };\n      this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    }\n\n    attract(particle) {\n      const options = this.options;\n\n      if (options.draggable) {\n        const mouse = this.container.interactivity.mouse;\n\n        if (mouse.clicking && mouse.downPosition) {\n          const mouseDist = Utils_1.NumberUtils.getDistance(this.position, mouse.downPosition);\n\n          if (mouseDist <= this.size) {\n            this.dragging = true;\n          }\n        } else {\n          this.dragging = false;\n        }\n\n        if (this.dragging && mouse.position) {\n          this.position.x = mouse.position.x;\n          this.position.y = mouse.position.y;\n        }\n      }\n\n      const pos = particle.getPosition();\n      const {\n        dx,\n        dy,\n        distance\n      } = Utils_1.NumberUtils.getDistances(this.position, pos);\n      const angle = Math.atan2(dx, dy);\n      const acceleration = this.mass / Math.pow(distance, 2) * this.container.retina.reduceFactor;\n\n      if (distance < this.size + particle.getRadius()) {\n        const sizeFactor = particle.getRadius() * 0.033 * this.container.retina.pixelRatio;\n\n        if (this.size > particle.getRadius() && distance < this.size - particle.getRadius()) {\n          if (options.destroy) {\n            particle.destroy();\n          } else {\n            particle.needsNewPosition = true;\n            this.updateParticlePosition(particle, angle, acceleration);\n          }\n        } else {\n          if (options.destroy) {\n            particle.size.value -= sizeFactor;\n          }\n\n          this.updateParticlePosition(particle, angle, acceleration);\n        }\n\n        if (this.limit === undefined || this.size < this.limit) {\n          this.size += sizeFactor;\n        }\n\n        this.mass += sizeFactor * this.options.size.density * this.container.retina.reduceFactor;\n      } else {\n        this.updateParticlePosition(particle, angle, acceleration);\n      }\n    }\n\n    resize() {\n      const initialPosition = this.initialPosition;\n      this.position = initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n    }\n\n    draw(context) {\n      context.translate(this.position.x, this.position.y);\n      context.beginPath();\n      context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n      context.closePath();\n      context.fillStyle = Utils_1.ColorUtils.getStyleFromRgb(this.color, this.opacity);\n      context.fill();\n    }\n\n    calcPosition() {\n      var _a, _b;\n\n      const container = this.container;\n      const percentPosition = this.options.position;\n      return {\n        x: ((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width,\n        y: ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height\n      };\n    }\n\n    updateParticlePosition(particle, angle, acceleration) {\n      var _a;\n\n      if (particle.destroyed) {\n        return;\n      }\n\n      const canvasSize = this.container.canvas.size;\n\n      if (particle.needsNewPosition) {\n        const pSize = particle.getRadius();\n        particle.position.x = Math.random() * (canvasSize.width - pSize * 2) + pSize;\n        particle.position.y = Math.random() * (canvasSize.height - pSize * 2) + pSize;\n        particle.needsNewPosition = false;\n      }\n\n      if (this.options.orbits) {\n        if (particle.orbitRadius === undefined) {\n          particle.orbitRadius = Utils_1.NumberUtils.getDistance(particle.getPosition(), this.position);\n        }\n\n        if (particle.orbitRadius <= this.size && !this.options.destroy) {\n          particle.orbitRadius = Math.random() * Math.max(canvasSize.width, canvasSize.height);\n        }\n\n        if (particle.orbitAngle === undefined) {\n          particle.orbitAngle = Math.random() * Math.PI * 2;\n        }\n\n        const orbitRadius = particle.orbitRadius;\n        const orbitAngle = particle.orbitAngle;\n        particle.velocity.horizontal = 0;\n        particle.velocity.vertical = 0;\n        particle.position.x = this.position.x + orbitRadius * Math.cos(orbitAngle);\n        particle.position.y = this.position.y + orbitRadius * Math.sin(orbitAngle);\n        particle.orbitRadius -= acceleration;\n        particle.orbitAngle += ((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : this.container.retina.moveSpeed) / 100 * this.container.retina.reduceFactor;\n      } else {\n        particle.velocity.horizontal += Math.sin(angle) * acceleration;\n        particle.velocity.vertical += Math.cos(angle) * acceleration;\n      }\n    }\n\n  }\n\n  exports.AbsorberInstance = AbsorberInstance;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","AbsorberInstance","Utils_1","constructor","absorbers","container","options","position","_a","_b","initialPosition","dragging","opacity","size","NumberUtils","getValue","retina","pixelRatio","mass","density","reduceFactor","limit","color","ColorUtils","colorToRgb","b","g","r","calcPosition","attract","particle","draggable","mouse","interactivity","clicking","downPosition","mouseDist","getDistance","x","y","pos","getPosition","dx","dy","distance","getDistances","angle","Math","atan2","acceleration","pow","getRadius","sizeFactor","destroy","needsNewPosition","updateParticlePosition","resize","Utils","isPointInside","canvas","draw","context","translate","beginPath","arc","PI","closePath","fillStyle","getStyleFromRgb","fill","percentPosition","random","width","height","destroyed","canvasSize","pSize","orbits","orbitRadius","max","orbitAngle","velocity","horizontal","vertical","cos","sin","moveSpeed"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../../Utils\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.AbsorberInstance = void 0;\n    const Utils_1 = require(\"../../Utils\");\n    class AbsorberInstance {\n        constructor(absorbers, container, options, position) {\n            var _a, _b;\n            this.absorbers = absorbers;\n            this.container = container;\n            this.initialPosition = position;\n            this.options = options;\n            this.dragging = false;\n            this.opacity = this.options.opacity;\n            this.size = Utils_1.NumberUtils.getValue(options.size) * container.retina.pixelRatio;\n            this.mass = this.size * options.size.density * container.retina.reduceFactor;\n            const limit = options.size.limit;\n            this.limit = limit !== undefined ? limit * container.retina.pixelRatio * container.retina.reduceFactor : limit;\n            const color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n            this.color = (_a = Utils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n                b: 0,\n                g: 0,\n                r: 0,\n            };\n            this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        }\n        attract(particle) {\n            const options = this.options;\n            if (options.draggable) {\n                const mouse = this.container.interactivity.mouse;\n                if (mouse.clicking && mouse.downPosition) {\n                    const mouseDist = Utils_1.NumberUtils.getDistance(this.position, mouse.downPosition);\n                    if (mouseDist <= this.size) {\n                        this.dragging = true;\n                    }\n                }\n                else {\n                    this.dragging = false;\n                }\n                if (this.dragging && mouse.position) {\n                    this.position.x = mouse.position.x;\n                    this.position.y = mouse.position.y;\n                }\n            }\n            const pos = particle.getPosition();\n            const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(this.position, pos);\n            const angle = Math.atan2(dx, dy);\n            const acceleration = (this.mass / Math.pow(distance, 2)) * this.container.retina.reduceFactor;\n            if (distance < this.size + particle.getRadius()) {\n                const sizeFactor = particle.getRadius() * 0.033 * this.container.retina.pixelRatio;\n                if (this.size > particle.getRadius() && distance < this.size - particle.getRadius()) {\n                    if (options.destroy) {\n                        particle.destroy();\n                    }\n                    else {\n                        particle.needsNewPosition = true;\n                        this.updateParticlePosition(particle, angle, acceleration);\n                    }\n                }\n                else {\n                    if (options.destroy) {\n                        particle.size.value -= sizeFactor;\n                    }\n                    this.updateParticlePosition(particle, angle, acceleration);\n                }\n                if (this.limit === undefined || this.size < this.limit) {\n                    this.size += sizeFactor;\n                }\n                this.mass += sizeFactor * this.options.size.density * this.container.retina.reduceFactor;\n            }\n            else {\n                this.updateParticlePosition(particle, angle, acceleration);\n            }\n        }\n        resize() {\n            const initialPosition = this.initialPosition;\n            this.position =\n                initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                    ? initialPosition\n                    : this.calcPosition();\n        }\n        draw(context) {\n            context.translate(this.position.x, this.position.y);\n            context.beginPath();\n            context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n            context.closePath();\n            context.fillStyle = Utils_1.ColorUtils.getStyleFromRgb(this.color, this.opacity);\n            context.fill();\n        }\n        calcPosition() {\n            var _a, _b;\n            const container = this.container;\n            const percentPosition = this.options.position;\n            return {\n                x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n                y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n            };\n        }\n        updateParticlePosition(particle, angle, acceleration) {\n            var _a;\n            if (particle.destroyed) {\n                return;\n            }\n            const canvasSize = this.container.canvas.size;\n            if (particle.needsNewPosition) {\n                const pSize = particle.getRadius();\n                particle.position.x = Math.random() * (canvasSize.width - pSize * 2) + pSize;\n                particle.position.y = Math.random() * (canvasSize.height - pSize * 2) + pSize;\n                particle.needsNewPosition = false;\n            }\n            if (this.options.orbits) {\n                if (particle.orbitRadius === undefined) {\n                    particle.orbitRadius = Utils_1.NumberUtils.getDistance(particle.getPosition(), this.position);\n                }\n                if (particle.orbitRadius <= this.size && !this.options.destroy) {\n                    particle.orbitRadius = Math.random() * Math.max(canvasSize.width, canvasSize.height);\n                }\n                if (particle.orbitAngle === undefined) {\n                    particle.orbitAngle = Math.random() * Math.PI * 2;\n                }\n                const orbitRadius = particle.orbitRadius;\n                const orbitAngle = particle.orbitAngle;\n                particle.velocity.horizontal = 0;\n                particle.velocity.vertical = 0;\n                particle.position.x = this.position.x + orbitRadius * Math.cos(orbitAngle);\n                particle.position.y = this.position.y + orbitRadius * Math.sin(orbitAngle);\n                particle.orbitRadius -= acceleration;\n                particle.orbitAngle +=\n                    (((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : this.container.retina.moveSpeed) / 100) * this.container.retina.reduceFactor;\n            }\n            else {\n                particle.velocity.horizontal += Math.sin(angle) * acceleration;\n                particle.velocity.vertical += Math.cos(angle) * acceleration;\n            }\n        }\n    }\n    exports.AbsorberInstance = AbsorberInstance;\n});\n"]},"metadata":{},"sourceType":"script"}