{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"../../Utils\", \"../../Enums/Modes\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Grabber = void 0;\n\n  const Utils_1 = require(\"../../Utils\");\n\n  const Modes_1 = require(\"../../Enums/Modes\");\n\n  class Grabber {\n    constructor(container) {\n      this.container = container;\n    }\n\n    isEnabled() {\n      const container = this.container;\n      const mouse = container.interactivity.mouse;\n      const events = container.options.interactivity.events;\n\n      if (!(events.onHover.enable && mouse.position)) {\n        return false;\n      }\n\n      const hoverMode = events.onHover.mode;\n      return Utils_1.Utils.isInArray(Modes_1.HoverMode.grab, hoverMode);\n    }\n\n    reset() {}\n\n    interact() {\n      var _a;\n\n      const container = this.container;\n      const options = container.options;\n      const interactivity = options.interactivity;\n\n      if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n        const mousePos = container.interactivity.mouse.position;\n\n        if (mousePos === undefined) {\n          return;\n        }\n\n        const distance = container.retina.grabModeDistance;\n        const query = container.particles.quadTree.queryCircle(mousePos, distance);\n\n        for (const particle of query) {\n          const pos = particle.getPosition();\n          const pointDistance = Utils_1.NumberUtils.getDistance(pos, mousePos);\n\n          if (pointDistance <= distance) {\n            const grabLineOptions = interactivity.modes.grab.links;\n            const lineOpacity = grabLineOptions.opacity;\n            const opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n\n            if (opacityLine > 0) {\n              const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.particlesOptions.links.color;\n\n              if (!container.particles.grabLineColor) {\n                const linksOptions = container.options.interactivity.modes.grab.links;\n                container.particles.grabLineColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n              }\n\n              const colorLine = Utils_1.ColorUtils.getLinkColor(particle, undefined, container.particles.grabLineColor);\n\n              if (colorLine === undefined) {\n                return;\n              }\n\n              container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  exports.Grabber = Grabber;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Interactions/External/Grabber.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Grabber","Utils_1","Modes_1","constructor","container","isEnabled","mouse","interactivity","events","options","onHover","enable","position","hoverMode","mode","Utils","isInArray","HoverMode","grab","reset","interact","_a","status","Constants","mouseMoveEvent","mousePos","distance","retina","grabModeDistance","query","particles","quadTree","queryCircle","particle","pos","getPosition","pointDistance","NumberUtils","getDistance","grabLineOptions","modes","links","lineOpacity","opacity","opacityLine","optColor","color","particlesOptions","grabLineColor","linksOptions","ColorUtils","getLinkRandomColor","blink","consent","colorLine","getLinkColor","canvas","drawGrabLine"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../../Utils\", \"../../Enums/Modes\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Grabber = void 0;\n    const Utils_1 = require(\"../../Utils\");\n    const Modes_1 = require(\"../../Enums/Modes\");\n    class Grabber {\n        constructor(container) {\n            this.container = container;\n        }\n        isEnabled() {\n            const container = this.container;\n            const mouse = container.interactivity.mouse;\n            const events = container.options.interactivity.events;\n            if (!(events.onHover.enable && mouse.position)) {\n                return false;\n            }\n            const hoverMode = events.onHover.mode;\n            return Utils_1.Utils.isInArray(Modes_1.HoverMode.grab, hoverMode);\n        }\n        reset() {\n        }\n        interact() {\n            var _a;\n            const container = this.container;\n            const options = container.options;\n            const interactivity = options.interactivity;\n            if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n                const mousePos = container.interactivity.mouse.position;\n                if (mousePos === undefined) {\n                    return;\n                }\n                const distance = container.retina.grabModeDistance;\n                const query = container.particles.quadTree.queryCircle(mousePos, distance);\n                for (const particle of query) {\n                    const pos = particle.getPosition();\n                    const pointDistance = Utils_1.NumberUtils.getDistance(pos, mousePos);\n                    if (pointDistance <= distance) {\n                        const grabLineOptions = interactivity.modes.grab.links;\n                        const lineOpacity = grabLineOptions.opacity;\n                        const opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n                        if (opacityLine > 0) {\n                            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.particlesOptions.links.color;\n                            if (!container.particles.grabLineColor) {\n                                const linksOptions = container.options.interactivity.modes.grab.links;\n                                container.particles.grabLineColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                            }\n                            const colorLine = Utils_1.ColorUtils.getLinkColor(particle, undefined, container.particles.grabLineColor);\n                            if (colorLine === undefined) {\n                                return;\n                            }\n                            container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    exports.Grabber = Grabber;\n});\n"]},"metadata":{},"sourceType":"script"}