{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"../../Utils\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Linker = void 0;\n\n  const Utils_1 = require(\"../../Utils\");\n\n  class Linker {\n    constructor(container) {\n      this.container = container;\n    }\n\n    isEnabled(particle) {\n      return particle.particlesOptions.links.enable;\n    }\n\n    reset() {}\n\n    interact(p1) {\n      var _a;\n\n      const container = this.container;\n      const linkOpt1 = p1.particlesOptions.links;\n      const optOpacity = linkOpt1.opacity;\n      const optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n      const canvasSize = container.canvas.size;\n      const warp = linkOpt1.warp;\n      const pos1 = p1.getPosition();\n      const range = warp ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize) : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n      const query = container.particles.quadTree.query(range);\n\n      for (const p2 of query) {\n        const linkOpt2 = p2.particlesOptions.links;\n\n        if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed) {\n          continue;\n        }\n\n        const pos2 = p2.getPosition();\n        let distance = Utils_1.NumberUtils.getDistance(pos1, pos2);\n\n        if (warp) {\n          if (distance > optDistance) {\n            const pos2NE = {\n              x: pos2.x - canvasSize.width,\n              y: pos2.y\n            };\n            distance = Utils_1.NumberUtils.getDistance(pos1, pos2NE);\n\n            if (distance > optDistance) {\n              const pos2SE = {\n                x: pos2.x - canvasSize.width,\n                y: pos2.y - canvasSize.height\n              };\n              distance = Utils_1.NumberUtils.getDistance(pos1, pos2SE);\n\n              if (distance > optDistance) {\n                const pos2SW = {\n                  x: pos2.x,\n                  y: pos2.y - canvasSize.height\n                };\n                distance = Utils_1.NumberUtils.getDistance(pos1, pos2SW);\n              }\n            }\n          }\n        }\n\n        if (distance > optDistance) {\n          return;\n        }\n\n        const opacityLine = (1 - distance / optDistance) * optOpacity;\n        const linksOptions = p1.particlesOptions.links;\n        let linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n\n        if (!linkColor) {\n          const optColor = linksOptions.color;\n          linkColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n\n          if (linksOptions.id !== undefined) {\n            container.particles.linksColors.set(linksOptions.id, linkColor);\n          } else {\n            container.particles.linksColor = linkColor;\n          }\n        }\n\n        if (p2.links.map(t => t.destination).indexOf(p1) === -1 && p1.links.map(t => t.destination).indexOf(p2) === -1) {\n          p1.links.push({\n            destination: p2,\n            opacity: opacityLine\n          });\n        }\n      }\n    }\n\n  }\n\n  exports.Linker = Linker;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Interactions/Particles/Linker.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Linker","Utils_1","constructor","container","isEnabled","particle","particlesOptions","links","enable","reset","interact","p1","_a","linkOpt1","optOpacity","opacity","optDistance","linksDistance","retina","canvasSize","canvas","size","warp","pos1","getPosition","range","CircleWarp","x","y","Circle","query","particles","quadTree","p2","linkOpt2","id","spawning","destroyed","pos2","distance","NumberUtils","getDistance","pos2NE","width","pos2SE","height","pos2SW","opacityLine","linksOptions","linkColor","linksColors","get","linksColor","optColor","color","ColorUtils","getLinkRandomColor","blink","consent","set","map","t","destination","indexOf","push"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../../Utils\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Linker = void 0;\n    const Utils_1 = require(\"../../Utils\");\n    class Linker {\n        constructor(container) {\n            this.container = container;\n        }\n        isEnabled(particle) {\n            return particle.particlesOptions.links.enable;\n        }\n        reset() {\n        }\n        interact(p1) {\n            var _a;\n            const container = this.container;\n            const linkOpt1 = p1.particlesOptions.links;\n            const optOpacity = linkOpt1.opacity;\n            const optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n            const canvasSize = container.canvas.size;\n            const warp = linkOpt1.warp;\n            const pos1 = p1.getPosition();\n            const range = warp\n                ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n                : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n            const query = container.particles.quadTree.query(range);\n            for (const p2 of query) {\n                const linkOpt2 = p2.particlesOptions.links;\n                if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed) {\n                    continue;\n                }\n                const pos2 = p2.getPosition();\n                let distance = Utils_1.NumberUtils.getDistance(pos1, pos2);\n                if (warp) {\n                    if (distance > optDistance) {\n                        const pos2NE = {\n                            x: pos2.x - canvasSize.width,\n                            y: pos2.y,\n                        };\n                        distance = Utils_1.NumberUtils.getDistance(pos1, pos2NE);\n                        if (distance > optDistance) {\n                            const pos2SE = {\n                                x: pos2.x - canvasSize.width,\n                                y: pos2.y - canvasSize.height,\n                            };\n                            distance = Utils_1.NumberUtils.getDistance(pos1, pos2SE);\n                            if (distance > optDistance) {\n                                const pos2SW = {\n                                    x: pos2.x,\n                                    y: pos2.y - canvasSize.height,\n                                };\n                                distance = Utils_1.NumberUtils.getDistance(pos1, pos2SW);\n                            }\n                        }\n                    }\n                }\n                if (distance > optDistance) {\n                    return;\n                }\n                const opacityLine = (1 - distance / optDistance) * optOpacity;\n                const linksOptions = p1.particlesOptions.links;\n                let linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                if (!linkColor) {\n                    const optColor = linksOptions.color;\n                    linkColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                    if (linksOptions.id !== undefined) {\n                        container.particles.linksColors.set(linksOptions.id, linkColor);\n                    }\n                    else {\n                        container.particles.linksColor = linkColor;\n                    }\n                }\n                if (p2.links.map((t) => t.destination).indexOf(p1) === -1 &&\n                    p1.links.map((t) => t.destination).indexOf(p2) === -1) {\n                    p1.links.push({\n                        destination: p2,\n                        opacity: opacityLine,\n                    });\n                }\n            }\n        }\n    }\n    exports.Linker = Linker;\n});\n"]},"metadata":{},"sourceType":"script"}