{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"../Utils\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Canvas = void 0;\n\n  const Utils_1 = require(\"../Utils\");\n\n  class Canvas {\n    constructor(container) {\n      this.container = container;\n      this.size = {\n        height: 0,\n        width: 0\n      };\n      this.context = null;\n      this.generatedCanvas = false;\n    }\n\n    init() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n      this.resize();\n      const options = this.container.options;\n      const element = this.element;\n\n      if (element) {\n        if (options.backgroundMode.enable) {\n          this.originalStyle = Utils_1.Utils.deepExtend({}, element.style);\n          element.style.position = \"fixed\";\n          element.style.zIndex = options.backgroundMode.zIndex.toString(10);\n          element.style.top = \"0\";\n          element.style.left = \"0\";\n          element.style.width = \"100%\";\n          element.style.height = \"100%\";\n        } else {\n          element.style.position = (_b = (_a = this.originalStyle) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : \"\";\n          element.style.zIndex = (_d = (_c = this.originalStyle) === null || _c === void 0 ? void 0 : _c.zIndex) !== null && _d !== void 0 ? _d : \"\";\n          element.style.top = (_f = (_e = this.originalStyle) === null || _e === void 0 ? void 0 : _e.top) !== null && _f !== void 0 ? _f : \"\";\n          element.style.left = (_h = (_g = this.originalStyle) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : \"\";\n          element.style.width = (_k = (_j = this.originalStyle) === null || _j === void 0 ? void 0 : _j.width) !== null && _k !== void 0 ? _k : \"\";\n          element.style.height = (_m = (_l = this.originalStyle) === null || _l === void 0 ? void 0 : _l.height) !== null && _m !== void 0 ? _m : \"\";\n        }\n      }\n\n      const cover = options.backgroundMask.cover;\n      const color = cover.color;\n      const trail = options.particles.move.trail;\n      const coverRgb = Utils_1.ColorUtils.colorToRgb(color);\n      this.coverColor = coverRgb !== undefined ? {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      } : undefined;\n      this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n      this.initBackground();\n      this.paint();\n    }\n\n    loadCanvas(canvas, generatedCanvas) {\n      var _a;\n\n      if (!canvas.className) {\n        canvas.className = Utils_1.Constants.canvasClass;\n      }\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = Utils_1.Utils.deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this.context = this.element.getContext(\"2d\");\n      this.container.retina.init();\n      this.initBackground();\n    }\n\n    destroy() {\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      if (this.context) {\n        Utils_1.CanvasUtils.clear(this.context, this.size);\n      }\n    }\n\n    resize() {\n      if (!this.element) {\n        return;\n      }\n\n      this.element.width = this.size.width;\n      this.element.height = this.size.height;\n    }\n\n    paint() {\n      const options = this.container.options;\n\n      if (!this.context) {\n        return;\n      }\n\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        Utils_1.CanvasUtils.clear(this.context, this.size);\n        this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor, this.coverColor.a));\n      } else {\n        this.paintBase();\n      }\n    }\n\n    clear() {\n      const options = this.container.options;\n      const trail = options.particles.move.trail;\n\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n      } else if (this.context) {\n        Utils_1.CanvasUtils.clear(this.context, this.size);\n      }\n    }\n\n    windowResize() {\n      if (!this.element) {\n        return;\n      }\n\n      const container = this.container;\n      const options = container.options;\n      const pxRatio = container.retina.pixelRatio;\n      container.canvas.size.width = this.element.offsetWidth * pxRatio;\n      container.canvas.size.height = this.element.offsetHeight * pxRatio;\n      this.element.width = container.canvas.size.width;\n      this.element.height = container.canvas.size.height;\n\n      if (!options.particles.move.enable) {\n        container.particles.redraw();\n      }\n\n      container.densityAutoParticles();\n\n      for (const [, plugin] of container.plugins) {\n        if (plugin.resize !== undefined) {\n          plugin.resize();\n        }\n      }\n    }\n\n    drawConnectLine(p1, p2) {\n      var _a;\n\n      const lineStyle = this.lineStyle(p1, p2);\n\n      if (!lineStyle) {\n        return;\n      }\n\n      const ctx = this.context;\n\n      if (!ctx) {\n        return;\n      }\n\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    }\n\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n      var _a;\n\n      const container = this.container;\n      const ctx = container.canvas.context;\n\n      if (!ctx) {\n        return;\n      }\n\n      const beginPos = particle.getPosition();\n      Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    }\n\n    drawParticleShadow(particle, mousePos) {\n      if (!this.context) {\n        return;\n      }\n\n      Utils_1.CanvasUtils.drawParticleShadow(this.container, this.context, particle, mousePos);\n    }\n\n    drawLinkTriangle(p1, link1, link2) {\n      var _a;\n\n      const container = this.container;\n      const options = container.options;\n      const p2 = link1.destination;\n      const p3 = link2.destination;\n      const triangleOptions = p1.particlesOptions.links.triangles;\n      const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n\n      if (opacityTriangle <= 0) {\n        return;\n      }\n\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      const pos3 = p3.getPosition();\n      const ctx = this.context;\n\n      if (!ctx) {\n        return;\n      }\n\n      if (Utils_1.NumberUtils.getDistance(pos1, pos2) > container.retina.linksDistance || Utils_1.NumberUtils.getDistance(pos3, pos2) > container.retina.linksDistance || Utils_1.NumberUtils.getDistance(pos3, pos1) > container.retina.linksDistance) {\n        return;\n      }\n\n      let colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n\n      if (!colorTriangle) {\n        const linksOptions = p1.particlesOptions.links;\n        const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorTriangle = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n      }\n\n      if (!colorTriangle) {\n        return;\n      }\n\n      Utils_1.CanvasUtils.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    }\n\n    drawLinkLine(p1, link) {\n      var _a, _b;\n\n      const container = this.container;\n      const options = container.options;\n      const p2 = link.destination;\n      let opacity = link.opacity;\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      const ctx = this.context;\n\n      if (!ctx) {\n        return;\n      }\n\n      let colorLine;\n      const twinkle = p1.particlesOptions.twinkle.lines;\n\n      if (twinkle.enable) {\n        const twinkleFreq = twinkle.frequency;\n        const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n        const twinkling = Math.random() < twinkleFreq;\n\n        if (twinkling && twinkleRgb !== undefined) {\n          colorLine = twinkleRgb;\n          opacity = twinkle.opacity;\n        }\n      }\n\n      if (!colorLine) {\n        const linksOptions = p1.particlesOptions.links;\n        const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorLine = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n      }\n\n      if (!colorLine) {\n        return;\n      }\n\n      const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n      const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n      Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.particlesOptions.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.particlesOptions.links.shadow);\n    }\n\n    drawParticle(particle, delta) {\n      var _a, _b, _c, _d;\n\n      if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n        return;\n      }\n\n      const pfColor = particle.getFillColor();\n      const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n\n      if (!pfColor && !psColor) {\n        return;\n      }\n\n      const container = this.container;\n      const options = container.options;\n      const particles = container.particles;\n      const pOptions = particle.particlesOptions;\n      const twinkle = pOptions.twinkle.particles;\n      const twinkleFreq = twinkle.frequency;\n      const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n      const twinkling = twinkle.enable && Math.random() < twinkleFreq;\n      const radius = particle.getRadius();\n      const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n      const infectionStage = particle.infecter.infectionStage;\n      const infection = options.infection;\n      const infectionStages = infection.stages;\n      const infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n      const infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n      const fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : pfColor ? Utils_1.ColorUtils.hslToRgb(pfColor) : undefined;\n      const sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : psColor ? Utils_1.ColorUtils.hslToRgb(psColor) : undefined;\n      const fillColorValue = fColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(fColor, opacity) : undefined;\n\n      if (!this.context || !fillColorValue && !sColor) {\n        return;\n      }\n\n      const strokeColorValue = sColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(sColor, (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity) : fillColorValue;\n\n      if (particle.links.length > 0) {\n        this.context.save();\n        const p1Links = particle.links.filter(l => {\n          const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n          return linkFreq <= pOptions.links.frequency;\n        });\n\n        for (const link of p1Links) {\n          const p2 = link.destination;\n\n          if (pOptions.links.triangles.enable) {\n            const links = p1Links.map(l => l.destination);\n            const vertices = p2.links.filter(t => {\n              const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n              return linkFreq <= p2.particlesOptions.links.frequency && links.indexOf(t.destination) >= 0;\n            });\n\n            if (vertices.length) {\n              for (const vertex of vertices) {\n                const p3 = vertex.destination;\n                const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n\n                if (triangleFreq > pOptions.links.triangles.frequency) {\n                  continue;\n                }\n\n                this.drawLinkTriangle(particle, link, vertex);\n              }\n            }\n          }\n\n          if (link.opacity > 0 && container.retina.linksWidth > 0) {\n            this.drawLinkLine(particle, link);\n          }\n        }\n\n        this.context.restore();\n      }\n\n      if (radius > 0) {\n        Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius, opacity, particle.particlesOptions.shadow);\n      }\n    }\n\n    drawPlugin(plugin, delta) {\n      if (!this.context) {\n        return;\n      }\n\n      Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n    }\n\n    drawLight(mousePos) {\n      if (!this.context) {\n        return;\n      }\n\n      Utils_1.CanvasUtils.drawLight(this.container, this.context, mousePos);\n    }\n\n    paintBase(baseColor) {\n      if (!this.context) {\n        return;\n      }\n\n      Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n\n    lineStyle(p1, p2) {\n      const options = this.container.options;\n      const connectOptions = options.interactivity.modes.connect;\n\n      if (this.context) {\n        return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n      }\n    }\n\n    initBackground() {\n      const options = this.container.options;\n      const background = options.background;\n      const element = this.element;\n\n      if (!element) {\n        return;\n      }\n\n      const elementStyle = element.style;\n\n      if (background.color) {\n        const color = Utils_1.ColorUtils.colorToRgb(background.color);\n\n        if (color) {\n          elementStyle.backgroundColor = Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity);\n        }\n      }\n\n      if (background.image) {\n        elementStyle.backgroundImage = background.image;\n      }\n\n      if (background.position) {\n        elementStyle.backgroundPosition = background.position;\n      }\n\n      if (background.repeat) {\n        elementStyle.backgroundRepeat = background.repeat;\n      }\n\n      if (background.size) {\n        elementStyle.backgroundSize = background.size;\n      }\n    }\n\n  }\n\n  exports.Canvas = Canvas;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Core/Canvas.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Canvas","Utils_1","constructor","container","size","height","width","context","generatedCanvas","init","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","resize","options","element","backgroundMode","enable","originalStyle","Utils","deepExtend","style","position","zIndex","toString","top","left","cover","backgroundMask","color","trail","particles","move","coverRgb","ColorUtils","colorToRgb","coverColor","r","g","b","a","opacity","trailFillColor","fillColor","initBackground","paint","loadCanvas","canvas","className","Constants","canvasClass","remove","offsetHeight","offsetWidth","getContext","retina","destroy","CanvasUtils","clear","paintBase","getStyleFromRgb","length","windowResize","pxRatio","pixelRatio","redraw","densityAutoParticles","plugin","plugins","drawConnectLine","p1","p2","lineStyle","ctx","pos1","getPosition","pos2","linksWidth","drawGrabLine","particle","lineColor","mousePos","beginPos","drawParticleShadow","drawLinkTriangle","link1","link2","destination","p3","triangleOptions","particlesOptions","links","triangles","opacityTriangle","pos3","NumberUtils","getDistance","linksDistance","colorTriangle","linksOptions","linkColor","id","linksColors","get","linksColor","getLinkColor","composite","drawLinkLine","link","colorLine","twinkle","lines","twinkleFreq","frequency","twinkleRgb","twinkling","Math","random","maxDistance","warp","shadow","drawParticle","delta","image","loaded","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","pOptions","radius","getRadius","bubble","infectionStage","infecter","infection","infectionStages","stages","infectionColor","infectionRgb","fColor","hslToRgb","sColor","fillColorValue","strokeColorValue","stroke","save","p1Links","filter","l","linkFreq","getLinkFrequency","map","vertices","t","indexOf","vertex","triangleFreq","getTriangleFrequency","restore","drawPlugin","drawLight","baseColor","connectOptions","interactivity","modes","connect","gradient","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","repeat","backgroundRepeat","backgroundSize"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../Utils\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Canvas = void 0;\n    const Utils_1 = require(\"../Utils\");\n    class Canvas {\n        constructor(container) {\n            this.container = container;\n            this.size = {\n                height: 0,\n                width: 0,\n            };\n            this.context = null;\n            this.generatedCanvas = false;\n        }\n        init() {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n            this.resize();\n            const options = this.container.options;\n            const element = this.element;\n            if (element) {\n                if (options.backgroundMode.enable) {\n                    this.originalStyle = Utils_1.Utils.deepExtend({}, element.style);\n                    element.style.position = \"fixed\";\n                    element.style.zIndex = options.backgroundMode.zIndex.toString(10);\n                    element.style.top = \"0\";\n                    element.style.left = \"0\";\n                    element.style.width = \"100%\";\n                    element.style.height = \"100%\";\n                }\n                else {\n                    element.style.position = (_b = (_a = this.originalStyle) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : \"\";\n                    element.style.zIndex = (_d = (_c = this.originalStyle) === null || _c === void 0 ? void 0 : _c.zIndex) !== null && _d !== void 0 ? _d : \"\";\n                    element.style.top = (_f = (_e = this.originalStyle) === null || _e === void 0 ? void 0 : _e.top) !== null && _f !== void 0 ? _f : \"\";\n                    element.style.left = (_h = (_g = this.originalStyle) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : \"\";\n                    element.style.width = (_k = (_j = this.originalStyle) === null || _j === void 0 ? void 0 : _j.width) !== null && _k !== void 0 ? _k : \"\";\n                    element.style.height = (_m = (_l = this.originalStyle) === null || _l === void 0 ? void 0 : _l.height) !== null && _m !== void 0 ? _m : \"\";\n                }\n            }\n            const cover = options.backgroundMask.cover;\n            const color = cover.color;\n            const trail = options.particles.move.trail;\n            const coverRgb = Utils_1.ColorUtils.colorToRgb(color);\n            this.coverColor =\n                coverRgb !== undefined\n                    ? {\n                        r: coverRgb.r,\n                        g: coverRgb.g,\n                        b: coverRgb.b,\n                        a: cover.opacity,\n                    }\n                    : undefined;\n            this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n            this.initBackground();\n            this.paint();\n        }\n        loadCanvas(canvas, generatedCanvas) {\n            var _a;\n            if (!canvas.className) {\n                canvas.className = Utils_1.Constants.canvasClass;\n            }\n            if (this.generatedCanvas) {\n                (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n            }\n            this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n            this.element = canvas;\n            this.originalStyle = Utils_1.Utils.deepExtend({}, this.element.style);\n            this.size.height = canvas.offsetHeight;\n            this.size.width = canvas.offsetWidth;\n            this.context = this.element.getContext(\"2d\");\n            this.container.retina.init();\n            this.initBackground();\n        }\n        destroy() {\n            var _a;\n            if (this.generatedCanvas) {\n                (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n            }\n            if (this.context) {\n                Utils_1.CanvasUtils.clear(this.context, this.size);\n            }\n        }\n        resize() {\n            if (!this.element) {\n                return;\n            }\n            this.element.width = this.size.width;\n            this.element.height = this.size.height;\n        }\n        paint() {\n            const options = this.container.options;\n            if (!this.context) {\n                return;\n            }\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                Utils_1.CanvasUtils.clear(this.context, this.size);\n                this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor, this.coverColor.a));\n            }\n            else {\n                this.paintBase();\n            }\n        }\n        clear() {\n            const options = this.container.options;\n            const trail = options.particles.move.trail;\n            if (options.backgroundMask.enable) {\n                this.paint();\n            }\n            else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n                this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n            }\n            else if (this.context) {\n                Utils_1.CanvasUtils.clear(this.context, this.size);\n            }\n        }\n        windowResize() {\n            if (!this.element) {\n                return;\n            }\n            const container = this.container;\n            const options = container.options;\n            const pxRatio = container.retina.pixelRatio;\n            container.canvas.size.width = this.element.offsetWidth * pxRatio;\n            container.canvas.size.height = this.element.offsetHeight * pxRatio;\n            this.element.width = container.canvas.size.width;\n            this.element.height = container.canvas.size.height;\n            if (!options.particles.move.enable) {\n                container.particles.redraw();\n            }\n            container.densityAutoParticles();\n            for (const [, plugin] of container.plugins) {\n                if (plugin.resize !== undefined) {\n                    plugin.resize();\n                }\n            }\n        }\n        drawConnectLine(p1, p2) {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const ctx = this.context;\n            if (!ctx) {\n                return;\n            }\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        }\n        drawGrabLine(particle, lineColor, opacity, mousePos) {\n            var _a;\n            const container = this.container;\n            const ctx = container.canvas.context;\n            if (!ctx) {\n                return;\n            }\n            const beginPos = particle.getPosition();\n            Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        }\n        drawParticleShadow(particle, mousePos) {\n            if (!this.context) {\n                return;\n            }\n            Utils_1.CanvasUtils.drawParticleShadow(this.container, this.context, particle, mousePos);\n        }\n        drawLinkTriangle(p1, link1, link2) {\n            var _a;\n            const container = this.container;\n            const options = container.options;\n            const p2 = link1.destination;\n            const p3 = link2.destination;\n            const triangleOptions = p1.particlesOptions.links.triangles;\n            const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            const pos3 = p3.getPosition();\n            const ctx = this.context;\n            if (!ctx) {\n                return;\n            }\n            if (Utils_1.NumberUtils.getDistance(pos1, pos2) > container.retina.linksDistance ||\n                Utils_1.NumberUtils.getDistance(pos3, pos2) > container.retina.linksDistance ||\n                Utils_1.NumberUtils.getDistance(pos3, pos1) > container.retina.linksDistance) {\n                return;\n            }\n            let colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.particlesOptions.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            Utils_1.CanvasUtils.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        }\n        drawLinkLine(p1, link) {\n            var _a, _b;\n            const container = this.container;\n            const options = container.options;\n            const p2 = link.destination;\n            let opacity = link.opacity;\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            const ctx = this.context;\n            if (!ctx) {\n                return;\n            }\n            let colorLine;\n            const twinkle = p1.particlesOptions.twinkle.lines;\n            if (twinkle.enable) {\n                const twinkleFreq = twinkle.frequency;\n                const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n                const twinkling = Math.random() < twinkleFreq;\n                if (twinkling && twinkleRgb !== undefined) {\n                    colorLine = twinkleRgb;\n                    opacity = twinkle.opacity;\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.particlesOptions.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n            const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n            Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.particlesOptions.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.particlesOptions.links.shadow);\n        }\n        drawParticle(particle, delta) {\n            var _a, _b, _c, _d;\n            if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n                return;\n            }\n            const pfColor = particle.getFillColor();\n            const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n            if (!pfColor && !psColor) {\n                return;\n            }\n            const container = this.container;\n            const options = container.options;\n            const particles = container.particles;\n            const pOptions = particle.particlesOptions;\n            const twinkle = pOptions.twinkle.particles;\n            const twinkleFreq = twinkle.frequency;\n            const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n            const twinkling = twinkle.enable && Math.random() < twinkleFreq;\n            const radius = particle.getRadius();\n            const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n            const infectionStage = particle.infecter.infectionStage;\n            const infection = options.infection;\n            const infectionStages = infection.stages;\n            const infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n            const infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n            const fColor = twinkling && twinkleRgb !== undefined\n                ? twinkleRgb\n                : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (pfColor ? Utils_1.ColorUtils.hslToRgb(pfColor) : undefined);\n            const sColor = twinkling && twinkleRgb !== undefined\n                ? twinkleRgb\n                : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (psColor ? Utils_1.ColorUtils.hslToRgb(psColor) : undefined);\n            const fillColorValue = fColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(fColor, opacity) : undefined;\n            if (!this.context || (!fillColorValue && !sColor)) {\n                return;\n            }\n            const strokeColorValue = sColor !== undefined\n                ? Utils_1.ColorUtils.getStyleFromRgb(sColor, (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity)\n                : fillColorValue;\n            if (particle.links.length > 0) {\n                this.context.save();\n                const p1Links = particle.links.filter((l) => {\n                    const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n                    return linkFreq <= pOptions.links.frequency;\n                });\n                for (const link of p1Links) {\n                    const p2 = link.destination;\n                    if (pOptions.links.triangles.enable) {\n                        const links = p1Links.map((l) => l.destination);\n                        const vertices = p2.links.filter((t) => {\n                            const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                            return linkFreq <= p2.particlesOptions.links.frequency && links.indexOf(t.destination) >= 0;\n                        });\n                        if (vertices.length) {\n                            for (const vertex of vertices) {\n                                const p3 = vertex.destination;\n                                const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n                                if (triangleFreq > pOptions.links.triangles.frequency) {\n                                    continue;\n                                }\n                                this.drawLinkTriangle(particle, link, vertex);\n                            }\n                        }\n                    }\n                    if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                        this.drawLinkLine(particle, link);\n                    }\n                }\n                this.context.restore();\n            }\n            if (radius > 0) {\n                Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius, opacity, particle.particlesOptions.shadow);\n            }\n        }\n        drawPlugin(plugin, delta) {\n            if (!this.context) {\n                return;\n            }\n            Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n        }\n        drawLight(mousePos) {\n            if (!this.context) {\n                return;\n            }\n            Utils_1.CanvasUtils.drawLight(this.container, this.context, mousePos);\n        }\n        paintBase(baseColor) {\n            if (!this.context) {\n                return;\n            }\n            Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n        }\n        lineStyle(p1, p2) {\n            const options = this.container.options;\n            const connectOptions = options.interactivity.modes.connect;\n            if (this.context) {\n                return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n            }\n        }\n        initBackground() {\n            const options = this.container.options;\n            const background = options.background;\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const elementStyle = element.style;\n            if (background.color) {\n                const color = Utils_1.ColorUtils.colorToRgb(background.color);\n                if (color) {\n                    elementStyle.backgroundColor = Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity);\n                }\n            }\n            if (background.image) {\n                elementStyle.backgroundImage = background.image;\n            }\n            if (background.position) {\n                elementStyle.backgroundPosition = background.position;\n            }\n            if (background.repeat) {\n                elementStyle.backgroundRepeat = background.repeat;\n            }\n            if (background.size) {\n                elementStyle.backgroundSize = background.size;\n            }\n        }\n    }\n    exports.Canvas = Canvas;\n});\n"]},"metadata":{},"sourceType":"script"}