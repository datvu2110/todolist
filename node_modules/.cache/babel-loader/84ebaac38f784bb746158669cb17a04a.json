{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"../Enums\", \"./Constants\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.EventListeners = void 0;\n\n  const Enums_1 = require(\"../Enums\");\n\n  const Constants_1 = require(\"./Constants\");\n\n  function manageListener(element, event, handler, add, options) {\n    if (add) {\n      let addOptions = {\n        passive: true\n      };\n\n      if (typeof options === \"boolean\") {\n        addOptions.capture = options;\n      } else if (options !== undefined) {\n        addOptions = options;\n      }\n\n      element.addEventListener(event, handler, addOptions);\n    } else {\n      const removeOptions = options;\n      element.removeEventListener(event, handler, removeOptions);\n    }\n  }\n\n  class EventListeners {\n    constructor(container) {\n      this.container = container;\n      this.canPush = true;\n\n      this.mouseMoveHandler = e => this.mouseTouchMove(e);\n\n      this.touchStartHandler = e => this.mouseTouchMove(e);\n\n      this.touchMoveHandler = e => this.mouseTouchMove(e);\n\n      this.touchEndHandler = () => this.mouseTouchFinish();\n\n      this.mouseLeaveHandler = () => this.mouseTouchFinish();\n\n      this.touchCancelHandler = () => this.mouseTouchFinish();\n\n      this.touchEndClickHandler = e => this.mouseTouchClick(e);\n\n      this.mouseUpHandler = e => this.mouseTouchClick(e);\n\n      this.mouseDownHandler = () => this.mouseDown();\n\n      this.visibilityChangeHandler = () => this.handleVisibilityChange();\n\n      this.resizeHandler = () => this.handleWindowResize();\n    }\n\n    addListeners() {\n      this.manageListeners(true);\n    }\n\n    removeListeners() {\n      this.manageListeners(false);\n    }\n\n    manageListeners(add) {\n      const container = this.container;\n      const options = container.options;\n      const detectType = options.interactivity.detectsOn;\n      let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n\n      if (detectType === Enums_1.InteractivityDetect.window) {\n        container.interactivity.element = window;\n        mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n      } else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n        container.interactivity.element = container.canvas.element.parentNode;\n      } else {\n        container.interactivity.element = container.canvas.element;\n      }\n\n      const interactivityEl = container.interactivity.element;\n\n      if (interactivityEl && (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n        manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n\n        if (!options.interactivity.events.onClick.enable) {\n          manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n        }\n\n        manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n      }\n\n      if (options.interactivity.events.onClick.enable && interactivityEl) {\n        manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n      }\n\n      if (options.interactivity.events.resize) {\n        manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n      }\n\n      if (document) {\n        manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n      }\n    }\n\n    handleWindowResize() {\n      var _a;\n\n      (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }\n\n    handleVisibilityChange() {\n      const container = this.container;\n      const options = container.options;\n      this.mouseTouchFinish();\n\n      if (!options.pauseOnBlur) {\n        return;\n      }\n\n      if (document === null || document === void 0 ? void 0 : document.hidden) {\n        container.pageHidden = true;\n        container.pause();\n      } else {\n        container.pageHidden = false;\n\n        if (container.getAnimationStatus()) {\n          container.play(true);\n        } else {\n          container.draw();\n        }\n      }\n    }\n\n    mouseDown() {\n      const interactivity = this.container.interactivity;\n\n      if (interactivity) {\n        const mouse = interactivity.mouse;\n        mouse.clicking = true;\n        mouse.downPosition = mouse.position;\n      }\n    }\n\n    mouseTouchMove(e) {\n      var _a, _b, _c;\n\n      const container = this.container;\n      const options = container.options;\n\n      if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n        return;\n      }\n\n      container.interactivity.mouse.inside = true;\n      let pos;\n      const canvas = container.canvas.element;\n\n      if (e.type.startsWith(\"mouse\")) {\n        this.canPush = true;\n        const mouseEvent = e;\n\n        if (container.interactivity.element === window) {\n          if (canvas) {\n            const clientRect = canvas.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.clientX - clientRect.left,\n              y: mouseEvent.clientY - clientRect.top\n            };\n          }\n        } else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n          const source = mouseEvent.target;\n          const target = mouseEvent.currentTarget;\n\n          if (source && target) {\n            const sourceRect = source.getBoundingClientRect();\n            const targetRect = target.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.offsetX + sourceRect.left - targetRect.left,\n              y: mouseEvent.offsetY + sourceRect.top - targetRect.top\n            };\n          } else {\n            pos = {\n              x: mouseEvent.offsetX || mouseEvent.clientX,\n              y: mouseEvent.offsetY || mouseEvent.clientY\n            };\n          }\n        } else {\n          if (mouseEvent.target === container.canvas.element) {\n            pos = {\n              x: mouseEvent.offsetX || mouseEvent.clientX,\n              y: mouseEvent.offsetY || mouseEvent.clientY\n            };\n          }\n        }\n      } else {\n        this.canPush = e.type !== \"touchmove\";\n        const touchEvent = e;\n        const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n        const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n        pos = {\n          x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n          y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0)\n        };\n      }\n\n      const pxRatio = container.retina.pixelRatio;\n\n      if (pos) {\n        pos.x *= pxRatio;\n        pos.y *= pxRatio;\n      }\n\n      container.interactivity.mouse.position = pos;\n      container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n\n    mouseTouchFinish() {\n      const interactivity = this.container.interactivity;\n\n      if (interactivity === undefined) {\n        return;\n      }\n\n      const mouse = interactivity.mouse;\n      delete mouse.position;\n      delete mouse.clickPosition;\n      delete mouse.downPosition;\n      interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n      mouse.inside = false;\n      mouse.clicking = false;\n    }\n\n    mouseTouchClick(e) {\n      const container = this.container;\n      const options = container.options;\n      const mouse = container.interactivity.mouse;\n      mouse.inside = true;\n      let handled = false;\n      const mousePosition = mouse.position;\n\n      if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n        return;\n      }\n\n      for (const [, plugin] of container.plugins) {\n        if (plugin.clickPositionValid !== undefined) {\n          handled = plugin.clickPositionValid(mousePosition);\n\n          if (handled) {\n            break;\n          }\n        }\n      }\n\n      if (!handled) {\n        this.doMouseTouchClick(e);\n      }\n\n      mouse.clicking = false;\n    }\n\n    doMouseTouchClick(e) {\n      const container = this.container;\n      const options = container.options;\n\n      if (this.canPush) {\n        const mousePos = container.interactivity.mouse.position;\n\n        if (mousePos) {\n          container.interactivity.mouse.clickPosition = {\n            x: mousePos.x,\n            y: mousePos.y\n          };\n        } else {\n          return;\n        }\n\n        container.interactivity.mouse.clickTime = new Date().getTime();\n        const onClick = options.interactivity.events.onClick;\n\n        if (onClick.mode instanceof Array) {\n          for (const mode of onClick.mode) {\n            this.handleClickMode(mode);\n          }\n        } else {\n          this.handleClickMode(onClick.mode);\n        }\n      }\n\n      if (e.type === \"touchend\") {\n        setTimeout(() => this.mouseTouchFinish(), 500);\n      }\n    }\n\n    handleClickMode(mode) {\n      const container = this.container;\n      const options = container.options;\n      const pushNb = options.interactivity.modes.push.quantity;\n      const removeNb = options.interactivity.modes.remove.quantity;\n\n      switch (mode) {\n        case Enums_1.ClickMode.push:\n          {\n            if (pushNb > 0) {\n              if (options.particles.move.enable) {\n                container.particles.push(pushNb, container.interactivity.mouse);\n              } else {\n                if (pushNb === 1) {\n                  container.particles.push(pushNb, container.interactivity.mouse);\n                } else if (pushNb > 1) {\n                  container.particles.push(pushNb);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case Enums_1.ClickMode.remove:\n          container.particles.removeQuantity(removeNb);\n          break;\n\n        case Enums_1.ClickMode.bubble:\n          container.bubble.clicking = true;\n          break;\n\n        case Enums_1.ClickMode.repulse:\n          container.repulse.clicking = true;\n          container.repulse.count = 0;\n\n          for (const particle of container.repulse.particles) {\n            particle.velocity.horizontal = particle.initialVelocity.horizontal;\n            particle.velocity.vertical = particle.initialVelocity.vertical;\n          }\n\n          container.repulse.particles = [];\n          container.repulse.finish = false;\n          setTimeout(() => {\n            if (!container.destroyed) {\n              container.repulse.clicking = false;\n            }\n          }, options.interactivity.modes.repulse.duration * 1000);\n          break;\n\n        case Enums_1.ClickMode.attract:\n          container.attract.clicking = true;\n          container.attract.count = 0;\n\n          for (const particle of container.attract.particles) {\n            particle.velocity.horizontal = particle.initialVelocity.horizontal;\n            particle.velocity.vertical = particle.initialVelocity.vertical;\n          }\n\n          container.attract.particles = [];\n          container.attract.finish = false;\n          setTimeout(() => {\n            if (!container.destroyed) {\n              container.attract.clicking = false;\n            }\n          }, options.interactivity.modes.attract.duration * 1000);\n          break;\n\n        case Enums_1.ClickMode.pause:\n          if (container.getAnimationStatus()) {\n            container.pause();\n          } else {\n            container.play();\n          }\n\n          break;\n      }\n\n      for (const [, plugin] of container.plugins) {\n        if (plugin.handleClickMode) {\n          plugin.handleClickMode(mode);\n        }\n      }\n    }\n\n  }\n\n  exports.EventListeners = EventListeners;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Utils/EventListeners.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","EventListeners","Enums_1","Constants_1","manageListener","element","event","handler","add","options","addOptions","passive","capture","addEventListener","removeOptions","removeEventListener","constructor","container","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","mouseDownHandler","mouseDown","visibilityChangeHandler","handleVisibilityChange","resizeHandler","handleWindowResize","addListeners","manageListeners","removeListeners","detectType","interactivity","detectsOn","mouseLeaveEvent","Constants","InteractivityDetect","window","mouseOutEvent","parent","canvas","parentNode","interactivityEl","events","onHover","enable","onClick","mouseMoveEvent","touchStartEvent","touchMoveEvent","touchEndEvent","touchCancelEvent","mouseUpEvent","mouseDownEvent","resize","resizeEvent","document","visibilityChangeEvent","_a","windowResize","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","draw","mouse","clicking","downPosition","position","_b","_c","inside","pos","type","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","target","currentTarget","sourceRect","targetRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","canvasRect","pxRatio","retina","pixelRatio","status","clickPosition","handled","mousePosition","plugin","plugins","clickPositionValid","doMouseTouchClick","mousePos","clickTime","Date","getTime","mode","Array","handleClickMode","setTimeout","pushNb","modes","push","quantity","removeNb","remove","ClickMode","particles","move","removeQuantity","bubble","repulse","count","particle","velocity","horizontal","initialVelocity","vertical","finish","destroyed","duration","attract"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../Enums\", \"./Constants\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.EventListeners = void 0;\n    const Enums_1 = require(\"../Enums\");\n    const Constants_1 = require(\"./Constants\");\n    function manageListener(element, event, handler, add, options) {\n        if (add) {\n            let addOptions = { passive: true };\n            if (typeof options === \"boolean\") {\n                addOptions.capture = options;\n            }\n            else if (options !== undefined) {\n                addOptions = options;\n            }\n            element.addEventListener(event, handler, addOptions);\n        }\n        else {\n            const removeOptions = options;\n            element.removeEventListener(event, handler, removeOptions);\n        }\n    }\n    class EventListeners {\n        constructor(container) {\n            this.container = container;\n            this.canPush = true;\n            this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n            this.touchStartHandler = (e) => this.mouseTouchMove(e);\n            this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n            this.touchEndHandler = () => this.mouseTouchFinish();\n            this.mouseLeaveHandler = () => this.mouseTouchFinish();\n            this.touchCancelHandler = () => this.mouseTouchFinish();\n            this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n            this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n            this.mouseDownHandler = () => this.mouseDown();\n            this.visibilityChangeHandler = () => this.handleVisibilityChange();\n            this.resizeHandler = () => this.handleWindowResize();\n        }\n        addListeners() {\n            this.manageListeners(true);\n        }\n        removeListeners() {\n            this.manageListeners(false);\n        }\n        manageListeners(add) {\n            const container = this.container;\n            const options = container.options;\n            const detectType = options.interactivity.detectsOn;\n            let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n            if (detectType === Enums_1.InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n            }\n            else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n                container.interactivity.element = container.canvas.element.parentNode;\n            }\n            else {\n                container.interactivity.element = container.canvas.element;\n            }\n            const interactivityEl = container.interactivity.element;\n            if (interactivityEl &&\n                (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n                if (!options.interactivity.events.onClick.enable) {\n                    manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n                }\n                manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n            }\n            if (options.interactivity.events.onClick.enable && interactivityEl) {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n            }\n            if (options.interactivity.events.resize) {\n                manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n            }\n            if (document) {\n                manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n            }\n        }\n        handleWindowResize() {\n            var _a;\n            (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n        }\n        handleVisibilityChange() {\n            const container = this.container;\n            const options = container.options;\n            this.mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document === null || document === void 0 ? void 0 : document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw();\n                }\n            }\n        }\n        mouseDown() {\n            const interactivity = this.container.interactivity;\n            if (interactivity) {\n                const mouse = interactivity.mouse;\n                mouse.clicking = true;\n                mouse.downPosition = mouse.position;\n            }\n        }\n        mouseTouchMove(e) {\n            var _a, _b, _c;\n            const container = this.container;\n            const options = container.options;\n            if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n                return;\n            }\n            container.interactivity.mouse.inside = true;\n            let pos;\n            const canvas = container.canvas.element;\n            if (e.type.startsWith(\"mouse\")) {\n                this.canPush = true;\n                const mouseEvent = e;\n                if (container.interactivity.element === window) {\n                    if (canvas) {\n                        const clientRect = canvas.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n                    const source = mouseEvent.target;\n                    const target = mouseEvent.currentTarget;\n                    if (source && target) {\n                        const sourceRect = source.getBoundingClientRect();\n                        const targetRect = target.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + sourceRect.left - targetRect.left,\n                            y: mouseEvent.offsetY + sourceRect.top - targetRect.top,\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX || mouseEvent.clientX,\n                            y: mouseEvent.offsetY || mouseEvent.clientY,\n                        };\n                    }\n                }\n                else {\n                    if (mouseEvent.target === container.canvas.element) {\n                        pos = {\n                            x: mouseEvent.offsetX || mouseEvent.clientX,\n                            y: mouseEvent.offsetY || mouseEvent.clientY,\n                        };\n                    }\n                }\n            }\n            else {\n                this.canPush = e.type !== \"touchmove\";\n                const touchEvent = e;\n                const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n                pos = {\n                    x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                    y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n                };\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            container.interactivity.mouse.position = pos;\n            container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n        }\n        mouseTouchFinish() {\n            const interactivity = this.container.interactivity;\n            if (interactivity === undefined) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        }\n        mouseTouchClick(e) {\n            const container = this.container;\n            const options = container.options;\n            const mouse = container.interactivity.mouse;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (plugin.clickPositionValid !== undefined) {\n                    handled = plugin.clickPositionValid(mousePosition);\n                    if (handled) {\n                        break;\n                    }\n                }\n            }\n            if (!handled) {\n                this.doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        }\n        doMouseTouchClick(e) {\n            const container = this.container;\n            const options = container.options;\n            if (this.canPush) {\n                const mousePos = container.interactivity.mouse.position;\n                if (mousePos) {\n                    container.interactivity.mouse.clickPosition = {\n                        x: mousePos.x,\n                        y: mousePos.y,\n                    };\n                }\n                else {\n                    return;\n                }\n                container.interactivity.mouse.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                if (onClick.mode instanceof Array) {\n                    for (const mode of onClick.mode) {\n                        this.handleClickMode(mode);\n                    }\n                }\n                else {\n                    this.handleClickMode(onClick.mode);\n                }\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this.mouseTouchFinish(), 500);\n            }\n        }\n        handleClickMode(mode) {\n            const container = this.container;\n            const options = container.options;\n            const pushNb = options.interactivity.modes.push.quantity;\n            const removeNb = options.interactivity.modes.remove.quantity;\n            switch (mode) {\n                case Enums_1.ClickMode.push: {\n                    if (pushNb > 0) {\n                        if (options.particles.move.enable) {\n                            container.particles.push(pushNb, container.interactivity.mouse);\n                        }\n                        else {\n                            if (pushNb === 1) {\n                                container.particles.push(pushNb, container.interactivity.mouse);\n                            }\n                            else if (pushNb > 1) {\n                                container.particles.push(pushNb);\n                            }\n                        }\n                    }\n                    break;\n                }\n                case Enums_1.ClickMode.remove:\n                    container.particles.removeQuantity(removeNb);\n                    break;\n                case Enums_1.ClickMode.bubble:\n                    container.bubble.clicking = true;\n                    break;\n                case Enums_1.ClickMode.repulse:\n                    container.repulse.clicking = true;\n                    container.repulse.count = 0;\n                    for (const particle of container.repulse.particles) {\n                        particle.velocity.horizontal = particle.initialVelocity.horizontal;\n                        particle.velocity.vertical = particle.initialVelocity.vertical;\n                    }\n                    container.repulse.particles = [];\n                    container.repulse.finish = false;\n                    setTimeout(() => {\n                        if (!container.destroyed) {\n                            container.repulse.clicking = false;\n                        }\n                    }, options.interactivity.modes.repulse.duration * 1000);\n                    break;\n                case Enums_1.ClickMode.attract:\n                    container.attract.clicking = true;\n                    container.attract.count = 0;\n                    for (const particle of container.attract.particles) {\n                        particle.velocity.horizontal = particle.initialVelocity.horizontal;\n                        particle.velocity.vertical = particle.initialVelocity.vertical;\n                    }\n                    container.attract.particles = [];\n                    container.attract.finish = false;\n                    setTimeout(() => {\n                        if (!container.destroyed) {\n                            container.attract.clicking = false;\n                        }\n                    }, options.interactivity.modes.attract.duration * 1000);\n                    break;\n                case Enums_1.ClickMode.pause:\n                    if (container.getAnimationStatus()) {\n                        container.pause();\n                    }\n                    else {\n                        container.play();\n                    }\n                    break;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (plugin.handleClickMode) {\n                    plugin.handleClickMode(mode);\n                }\n            }\n        }\n    }\n    exports.EventListeners = EventListeners;\n});\n"]},"metadata":{},"sourceType":"script"}