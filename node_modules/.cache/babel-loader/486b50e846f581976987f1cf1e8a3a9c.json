{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"../../Utils\", \"../../Enums\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Bubbler = void 0;\n\n  const Utils_1 = require(\"../../Utils\");\n\n  const Enums_1 = require(\"../../Enums\");\n\n  function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue > optionsValue) {\n      const size = particleValue + (modeValue - optionsValue) * ratio;\n      return Utils_1.NumberUtils.clamp(size, particleValue, modeValue);\n    } else if (modeValue < optionsValue) {\n      const size = particleValue - (optionsValue - modeValue) * ratio;\n      return Utils_1.NumberUtils.clamp(size, modeValue, particleValue);\n    }\n  }\n\n  class Bubbler {\n    constructor(container) {\n      this.container = container;\n    }\n\n    isEnabled() {\n      const container = this.container;\n      const options = container.options;\n      const mouse = container.interactivity.mouse;\n      const events = options.interactivity.events;\n      const divs = events.onDiv;\n      const divBubble = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bubble, divs);\n\n      if (!(divBubble || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n\n      const hoverMode = events.onHover.mode;\n      const clickMode = events.onClick.mode;\n      return Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode) || divBubble;\n    }\n\n    reset(particle, force) {\n      if (!particle.bubble.inRange || force) {\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n      }\n    }\n\n    interact() {\n      const options = this.container.options;\n      const events = options.interactivity.events;\n      const onHover = events.onHover;\n      const onClick = events.onClick;\n      const hoverEnabled = onHover.enable;\n      const hoverMode = onHover.mode;\n      const clickEnabled = onClick.enable;\n      const clickMode = onClick.mode;\n      const divs = events.onDiv;\n\n      if (hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode)) {\n        this.hoverBubble();\n      } else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode)) {\n        this.clickBubble();\n      } else {\n        Utils_1.Utils.divModeExecute(Enums_1.DivMode.bubble, divs, (selector, div) => this.singleSelectorHover(selector, div));\n      }\n    }\n\n    singleSelectorHover(selector, div) {\n      const container = this.container;\n      const selectors = document.querySelectorAll(selector);\n\n      if (!selectors.length) {\n        return;\n      }\n\n      selectors.forEach(item => {\n        const elem = item;\n        const pxRatio = container.retina.pixelRatio;\n        const pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        };\n        const repulseRadius = elem.offsetWidth / 2 * pxRatio;\n        const area = div.type === Enums_1.DivType.circle ? new Utils_1.Circle(pos.x, pos.y, repulseRadius) : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n        const query = container.particles.quadTree.query(area);\n\n        for (const particle of query) {\n          if (!area.contains(particle.getPosition())) {\n            continue;\n          }\n\n          particle.bubble.inRange = true;\n          const divs = container.options.interactivity.modes.bubble.divs;\n          const divBubble = Utils_1.Utils.divMode(divs, elem);\n\n          if (!particle.bubble.div || particle.bubble.div !== elem) {\n            this.reset(particle, true);\n            particle.bubble.div = elem;\n          }\n\n          this.hoverBubbleSize(particle, 1, divBubble);\n          this.hoverBubbleOpacity(particle, 1, divBubble);\n          this.hoverBubbleColor(particle, divBubble);\n        }\n      });\n    }\n\n    process(particle, distMouse, timeSpent, data) {\n      const container = this.container;\n      const bubbleParam = data.bubbleObj.optValue;\n\n      if (bubbleParam === undefined) {\n        return;\n      }\n\n      const options = container.options;\n      const bubbleDuration = options.interactivity.modes.bubble.duration;\n      const bubbleDistance = container.retina.bubbleModeDistance;\n      const particlesParam = data.particlesObj.optValue;\n      const pObjBubble = data.bubbleObj.value;\n      const pObj = data.particlesObj.value || 0;\n      const type = data.type;\n\n      if (bubbleParam !== particlesParam) {\n        if (!container.bubble.durationEnd) {\n          if (distMouse <= bubbleDistance) {\n            const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n\n            if (obj !== bubbleParam) {\n              const value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n              if (type === Enums_1.ProcessBubbleType.size) {\n                particle.bubble.radius = value;\n              }\n\n              if (type === Enums_1.ProcessBubbleType.opacity) {\n                particle.bubble.opacity = value;\n              }\n            }\n          } else {\n            if (type === Enums_1.ProcessBubbleType.size) {\n              delete particle.bubble.radius;\n            }\n\n            if (type === Enums_1.ProcessBubbleType.opacity) {\n              delete particle.bubble.opacity;\n            }\n          }\n        } else if (pObjBubble) {\n          if (type === Enums_1.ProcessBubbleType.size) {\n            delete particle.bubble.radius;\n          }\n\n          if (type === Enums_1.ProcessBubbleType.opacity) {\n            delete particle.bubble.opacity;\n          }\n        }\n      }\n    }\n\n    clickBubble() {\n      var _a;\n\n      const container = this.container;\n      const options = container.options;\n      const mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (mouseClickPos === undefined) {\n        return;\n      }\n\n      const distance = container.retina.bubbleModeDistance;\n      const query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n\n      for (const particle of query) {\n        if (!container.bubble.clicking) {\n          continue;\n        }\n\n        particle.bubble.inRange = !container.bubble.durationEnd;\n        const pos = particle.getPosition();\n        const distMouse = Utils_1.NumberUtils.getDistance(pos, mouseClickPos);\n        const timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n\n        if (timeSpent > options.interactivity.modes.bubble.duration) {\n          container.bubble.durationEnd = true;\n        }\n\n        if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n          container.bubble.clicking = false;\n          container.bubble.durationEnd = false;\n        }\n\n        const sizeData = {\n          bubbleObj: {\n            optValue: container.retina.bubbleModeSize,\n            value: particle.bubble.radius\n          },\n          particlesObj: {\n            optValue: (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue,\n            value: particle.size.value\n          },\n          type: Enums_1.ProcessBubbleType.size\n        };\n        this.process(particle, distMouse, timeSpent, sizeData);\n        const opacityData = {\n          bubbleObj: {\n            optValue: options.interactivity.modes.bubble.opacity,\n            value: particle.bubble.opacity\n          },\n          particlesObj: {\n            optValue: particle.particlesOptions.opacity.value,\n            value: particle.opacity.value\n          },\n          type: Enums_1.ProcessBubbleType.opacity\n        };\n        this.process(particle, distMouse, timeSpent, opacityData);\n\n        if (!container.bubble.durationEnd) {\n          if (distMouse <= container.retina.bubbleModeDistance) {\n            this.hoverBubbleColor(particle);\n          } else {\n            delete particle.bubble.color;\n          }\n        } else {\n          delete particle.bubble.color;\n        }\n      }\n    }\n\n    hoverBubble() {\n      const container = this.container;\n      const mousePos = container.interactivity.mouse.position;\n\n      if (mousePos === undefined) {\n        return;\n      }\n\n      const distance = container.retina.bubbleModeDistance;\n      const query = container.particles.quadTree.queryCircle(mousePos, distance);\n\n      for (const particle of query) {\n        particle.bubble.inRange = true;\n        const pos = particle.getPosition();\n        const pointDistance = Utils_1.NumberUtils.getDistance(pos, mousePos);\n        const ratio = 1 - pointDistance / distance;\n\n        if (pointDistance <= distance) {\n          if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n            this.hoverBubbleSize(particle, ratio);\n            this.hoverBubbleOpacity(particle, ratio);\n            this.hoverBubbleColor(particle);\n          }\n        } else {\n          this.reset(particle);\n        }\n\n        if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n          this.reset(particle);\n        }\n      }\n    }\n\n    hoverBubbleSize(particle, ratio, divBubble) {\n      var _a;\n\n      const container = this.container;\n      const modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n\n      if (modeSize === undefined) {\n        return;\n      }\n\n      const optSize = (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue;\n      const pSize = particle.size.value;\n      const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n\n      if (size !== undefined) {\n        particle.bubble.radius = size;\n      }\n    }\n\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n      var _a;\n\n      const options = this.container.options;\n      const modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n\n      if (modeOpacity === undefined) {\n        return;\n      }\n\n      const optOpacity = particle.particlesOptions.opacity.value;\n      const pOpacity = particle.opacity.value;\n      const opacity = calculateBubbleValue(pOpacity, modeOpacity, optOpacity, ratio);\n\n      if (opacity !== undefined) {\n        particle.bubble.opacity = opacity;\n      }\n    }\n\n    hoverBubbleColor(particle, divBubble) {\n      var _a;\n\n      const options = this.container.options;\n\n      if (particle.bubble.color === undefined) {\n        const modeColor = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.color) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.color;\n\n        if (modeColor === undefined) {\n          return;\n        }\n\n        const bubbleColor = modeColor instanceof Array ? Utils_1.Utils.itemFromArray(modeColor) : modeColor;\n        particle.bubble.color = Utils_1.ColorUtils.colorToHsl(bubbleColor);\n      }\n    }\n\n  }\n\n  exports.Bubbler = Bubbler;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Interactions/External/Bubbler.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Bubbler","Utils_1","Enums_1","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","size","NumberUtils","clamp","constructor","container","isEnabled","options","mouse","interactivity","events","divs","onDiv","divBubble","Utils","isDivModeEnabled","DivMode","bubble","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","isInArray","HoverMode","ClickMode","reset","particle","force","inRange","div","opacity","radius","color","interact","hoverEnabled","clickEnabled","hoverBubble","clickBubble","divModeExecute","selector","singleSelectorHover","selectors","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","DivType","circle","Circle","Rectangle","query","particles","quadTree","contains","getPosition","modes","divMode","hoverBubbleSize","hoverBubbleOpacity","hoverBubbleColor","process","distMouse","timeSpent","data","bubbleParam","bubbleObj","optValue","bubbleDuration","duration","bubbleDistance","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","durationEnd","obj","ProcessBubbleType","_a","mouseClickPos","distance","queryCircle","clicking","getDistance","Date","getTime","clickTime","sizeData","bubbleModeSize","sizeValue","opacityData","particlesOptions","mousePos","pointDistance","status","Constants","mouseMoveEvent","mouseLeaveEvent","modeSize","optSize","pSize","modeOpacity","optOpacity","pOpacity","modeColor","bubbleColor","Array","itemFromArray","ColorUtils","colorToHsl"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../../Utils\", \"../../Enums\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Bubbler = void 0;\n    const Utils_1 = require(\"../../Utils\");\n    const Enums_1 = require(\"../../Enums\");\n    function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n        if (modeValue > optionsValue) {\n            const size = particleValue + (modeValue - optionsValue) * ratio;\n            return Utils_1.NumberUtils.clamp(size, particleValue, modeValue);\n        }\n        else if (modeValue < optionsValue) {\n            const size = particleValue - (optionsValue - modeValue) * ratio;\n            return Utils_1.NumberUtils.clamp(size, modeValue, particleValue);\n        }\n    }\n    class Bubbler {\n        constructor(container) {\n            this.container = container;\n        }\n        isEnabled() {\n            const container = this.container;\n            const options = container.options;\n            const mouse = container.interactivity.mouse;\n            const events = options.interactivity.events;\n            const divs = events.onDiv;\n            const divBubble = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bubble, divs);\n            if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n                return false;\n            }\n            const hoverMode = events.onHover.mode;\n            const clickMode = events.onClick.mode;\n            return (Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode) || divBubble);\n        }\n        reset(particle, force) {\n            if (!particle.bubble.inRange || force) {\n                delete particle.bubble.div;\n                delete particle.bubble.opacity;\n                delete particle.bubble.radius;\n                delete particle.bubble.color;\n            }\n        }\n        interact() {\n            const options = this.container.options;\n            const events = options.interactivity.events;\n            const onHover = events.onHover;\n            const onClick = events.onClick;\n            const hoverEnabled = onHover.enable;\n            const hoverMode = onHover.mode;\n            const clickEnabled = onClick.enable;\n            const clickMode = onClick.mode;\n            const divs = events.onDiv;\n            if (hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode)) {\n                this.hoverBubble();\n            }\n            else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode)) {\n                this.clickBubble();\n            }\n            else {\n                Utils_1.Utils.divModeExecute(Enums_1.DivMode.bubble, divs, (selector, div) => this.singleSelectorHover(selector, div));\n            }\n        }\n        singleSelectorHover(selector, div) {\n            const container = this.container;\n            const selectors = document.querySelectorAll(selector);\n            if (!selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item;\n                const pxRatio = container.retina.pixelRatio;\n                const pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                };\n                const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n                const area = div.type === Enums_1.DivType.circle\n                    ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n                    : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n                const query = container.particles.quadTree.query(area);\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = container.options.interactivity.modes.bubble.divs;\n                    const divBubble = Utils_1.Utils.divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.reset(particle, true);\n                        particle.bubble.div = elem;\n                    }\n                    this.hoverBubbleSize(particle, 1, divBubble);\n                    this.hoverBubbleOpacity(particle, 1, divBubble);\n                    this.hoverBubbleColor(particle, divBubble);\n                }\n            });\n        }\n        process(particle, distMouse, timeSpent, data) {\n            const container = this.container;\n            const bubbleParam = data.bubbleObj.optValue;\n            if (bubbleParam === undefined) {\n                return;\n            }\n            const options = container.options;\n            const bubbleDuration = options.interactivity.modes.bubble.duration;\n            const bubbleDistance = container.retina.bubbleModeDistance;\n            const particlesParam = data.particlesObj.optValue;\n            const pObjBubble = data.bubbleObj.value;\n            const pObj = data.particlesObj.value || 0;\n            const type = data.type;\n            if (bubbleParam !== particlesParam) {\n                if (!container.bubble.durationEnd) {\n                    if (distMouse <= bubbleDistance) {\n                        const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                        if (obj !== bubbleParam) {\n                            const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                            if (type === Enums_1.ProcessBubbleType.size) {\n                                particle.bubble.radius = value;\n                            }\n                            if (type === Enums_1.ProcessBubbleType.opacity) {\n                                particle.bubble.opacity = value;\n                            }\n                        }\n                    }\n                    else {\n                        if (type === Enums_1.ProcessBubbleType.size) {\n                            delete particle.bubble.radius;\n                        }\n                        if (type === Enums_1.ProcessBubbleType.opacity) {\n                            delete particle.bubble.opacity;\n                        }\n                    }\n                }\n                else if (pObjBubble) {\n                    if (type === Enums_1.ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === Enums_1.ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        }\n        clickBubble() {\n            var _a;\n            const container = this.container;\n            const options = container.options;\n            const mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const distance = container.retina.bubbleModeDistance;\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n            for (const particle of query) {\n                if (!container.bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !container.bubble.durationEnd;\n                const pos = particle.getPosition();\n                const distMouse = Utils_1.NumberUtils.getDistance(pos, mouseClickPos);\n                const timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > options.interactivity.modes.bubble.duration) {\n                    container.bubble.durationEnd = true;\n                }\n                if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                    container.bubble.clicking = false;\n                    container.bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue,\n                        value: particle.size.value,\n                    },\n                    type: Enums_1.ProcessBubbleType.size,\n                };\n                this.process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: options.interactivity.modes.bubble.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: particle.particlesOptions.opacity.value,\n                        value: particle.opacity.value,\n                    },\n                    type: Enums_1.ProcessBubbleType.opacity,\n                };\n                this.process(particle, distMouse, timeSpent, opacityData);\n                if (!container.bubble.durationEnd) {\n                    if (distMouse <= container.retina.bubbleModeDistance) {\n                        this.hoverBubbleColor(particle);\n                    }\n                    else {\n                        delete particle.bubble.color;\n                    }\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        }\n        hoverBubble() {\n            const container = this.container;\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos === undefined) {\n                return;\n            }\n            const distance = container.retina.bubbleModeDistance;\n            const query = container.particles.quadTree.queryCircle(mousePos, distance);\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition();\n                const pointDistance = Utils_1.NumberUtils.getDistance(pos, mousePos);\n                const ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n                        this.hoverBubbleSize(particle, ratio);\n                        this.hoverBubbleOpacity(particle, ratio);\n                        this.hoverBubbleColor(particle);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        }\n        hoverBubbleSize(particle, ratio, divBubble) {\n            var _a;\n            const container = this.container;\n            const modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio\n                : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue;\n            const pSize = particle.size.value;\n            const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        }\n        hoverBubbleOpacity(particle, ratio, divBubble) {\n            var _a;\n            const options = this.container.options;\n            const modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n            if (modeOpacity === undefined) {\n                return;\n            }\n            const optOpacity = particle.particlesOptions.opacity.value;\n            const pOpacity = particle.opacity.value;\n            const opacity = calculateBubbleValue(pOpacity, modeOpacity, optOpacity, ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        }\n        hoverBubbleColor(particle, divBubble) {\n            var _a;\n            const options = this.container.options;\n            if (particle.bubble.color === undefined) {\n                const modeColor = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.color) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.color;\n                if (modeColor === undefined) {\n                    return;\n                }\n                const bubbleColor = modeColor instanceof Array ? Utils_1.Utils.itemFromArray(modeColor) : modeColor;\n                particle.bubble.color = Utils_1.ColorUtils.colorToHsl(bubbleColor);\n            }\n        }\n    }\n    exports.Bubbler = Bubbler;\n});\n"]},"metadata":{},"sourceType":"script"}