{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"../../Enums\", \"../../Utils\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Attractor = void 0;\n\n  const Enums_1 = require(\"../../Enums\");\n\n  const Utils_1 = require(\"../../Utils\");\n\n  class Attractor {\n    constructor(container) {\n      this.container = container;\n    }\n\n    isEnabled() {\n      const container = this.container;\n      const options = container.options;\n      const mouse = container.interactivity.mouse;\n      const events = options.interactivity.events;\n\n      if (!(events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n\n      const hoverMode = events.onHover.mode;\n      const clickMode = events.onClick.mode;\n      return Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode);\n    }\n\n    reset() {}\n\n    interact() {\n      const container = this.container;\n      const options = container.options;\n      const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n      const events = options.interactivity.events;\n      const hoverEnabled = events.onHover.enable;\n      const hoverMode = events.onHover.mode;\n      const clickEnabled = events.onClick.enable;\n      const clickMode = events.onClick.mode;\n\n      if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode)) {\n        this.hoverAttract();\n      } else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode)) {\n        this.clickAttract();\n      }\n    }\n\n    hoverAttract() {\n      const container = this.container;\n      const mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      const attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n\n    processAttract(position, attractRadius, area) {\n      const container = this.container;\n      const query = container.particles.quadTree.query(area);\n\n      for (const particle of query) {\n        const {\n          dx,\n          dy,\n          distance\n        } = Utils_1.NumberUtils.getDistances(particle.position, position);\n        const normVec = {\n          x: dx / distance,\n          y: dy / distance\n        };\n        const velocity = container.options.interactivity.modes.attract.speed;\n        const attractFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / attractRadius, 2)) * velocity, 0, 50);\n        particle.position.x = particle.position.x - normVec.x * attractFactor;\n        particle.position.y = particle.position.y - normVec.y * attractFactor;\n      }\n    }\n\n    clickAttract() {\n      const container = this.container;\n\n      if (!container.attract.finish) {\n        if (!container.attract.count) {\n          container.attract.count = 0;\n        }\n\n        container.attract.count++;\n\n        if (container.attract.count === container.particles.count) {\n          container.attract.finish = true;\n        }\n      }\n\n      if (container.attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition;\n\n        if (!mousePos) {\n          return;\n        }\n\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n      } else if (container.attract.clicking === false) {\n        container.attract.particles = [];\n      }\n\n      return;\n    }\n\n  }\n\n  exports.Attractor = Attractor;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Interactions/External/Attractor.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Attractor","Enums_1","Utils_1","constructor","container","isEnabled","options","mouse","interactivity","events","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","Utils","isInArray","HoverMode","attract","ClickMode","reset","interact","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","Circle","x","y","area","query","particles","quadTree","particle","dx","dy","distance","NumberUtils","getDistances","normVec","velocity","modes","speed","attractFactor","clamp","Math","pow","finish","count","clicking"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../../Enums\", \"../../Utils\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Attractor = void 0;\n    const Enums_1 = require(\"../../Enums\");\n    const Utils_1 = require(\"../../Utils\");\n    class Attractor {\n        constructor(container) {\n            this.container = container;\n        }\n        isEnabled() {\n            const container = this.container;\n            const options = container.options;\n            const mouse = container.interactivity.mouse;\n            const events = options.interactivity.events;\n            if (!((events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n                return false;\n            }\n            const hoverMode = events.onHover.mode;\n            const clickMode = events.onClick.mode;\n            return Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode);\n        }\n        reset() {\n        }\n        interact() {\n            const container = this.container;\n            const options = container.options;\n            const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n            const events = options.interactivity.events;\n            const hoverEnabled = events.onHover.enable;\n            const hoverMode = events.onHover.mode;\n            const clickEnabled = events.onClick.enable;\n            const clickMode = events.onClick.mode;\n            if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode)) {\n                this.hoverAttract();\n            }\n            else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode)) {\n                this.clickAttract();\n            }\n        }\n        hoverAttract() {\n            const container = this.container;\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        processAttract(position, attractRadius, area) {\n            const container = this.container;\n            const query = container.particles.quadTree.query(area);\n            for (const particle of query) {\n                const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(particle.position, position);\n                const normVec = {\n                    x: dx / distance,\n                    y: dy / distance,\n                };\n                const velocity = container.options.interactivity.modes.attract.speed;\n                const attractFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / attractRadius, 2)) * velocity, 0, 50);\n                particle.position.x = particle.position.x - normVec.x * attractFactor;\n                particle.position.y = particle.position.y - normVec.y * attractFactor;\n            }\n        }\n        clickAttract() {\n            const container = this.container;\n            if (!container.attract.finish) {\n                if (!container.attract.count) {\n                    container.attract.count = 0;\n                }\n                container.attract.count++;\n                if (container.attract.count === container.particles.count) {\n                    container.attract.finish = true;\n                }\n            }\n            if (container.attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition;\n                if (!mousePos) {\n                    return;\n                }\n                const attractRadius = container.retina.attractModeDistance;\n                this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (container.attract.clicking === false) {\n                container.attract.particles = [];\n            }\n            return;\n        }\n    }\n    exports.Attractor = Attractor;\n});\n"]},"metadata":{},"sourceType":"script"}