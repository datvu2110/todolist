{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"./Canvas\", \"./Particles\", \"./Retina\", \"./FrameManager\", \"../Options/Classes/Options\", \"../Utils\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Container = void 0;\n\n  const Canvas_1 = require(\"./Canvas\");\n\n  const Particles_1 = require(\"./Particles\");\n\n  const Retina_1 = require(\"./Retina\");\n\n  const FrameManager_1 = require(\"./FrameManager\");\n\n  const Options_1 = require(\"../Options/Classes/Options\");\n\n  const Utils_1 = require(\"../Utils\");\n\n  class Container {\n    constructor(id, sourceOptions, ...presets) {\n      this.id = id;\n      this.sourceOptions = sourceOptions;\n      this.firstStart = true;\n      this.started = false;\n      this.destroyed = false;\n      this.paused = true;\n      this.lastFrameTime = 0;\n      this.pageHidden = false;\n      this.retina = new Retina_1.Retina(this);\n      this.canvas = new Canvas_1.Canvas(this);\n      this.particles = new Particles_1.Particles(this);\n      this.drawer = new FrameManager_1.FrameManager(this);\n      this.noise = {\n        generate: () => {\n          return {\n            angle: Math.random() * Math.PI * 2,\n            length: Math.random()\n          };\n        },\n        init: () => {},\n        update: () => {}\n      };\n      this.interactivity = {\n        mouse: {\n          clicking: false,\n          inside: false\n        }\n      };\n      this.bubble = {};\n      this.repulse = {\n        particles: []\n      };\n      this.attract = {\n        particles: []\n      };\n      this.plugins = new Map();\n      this.drawers = new Map();\n      this.density = 1;\n      this.options = new Options_1.Options();\n\n      for (const preset of presets) {\n        this.options.load(Utils_1.Plugins.getPreset(preset));\n      }\n\n      const shapes = Utils_1.Plugins.getSupportedShapes();\n\n      for (const type of shapes) {\n        const drawer = Utils_1.Plugins.getShapeDrawer(type);\n\n        if (drawer) {\n          this.drawers.set(type, drawer);\n        }\n      }\n\n      if (this.sourceOptions) {\n        this.options.load(this.sourceOptions);\n      }\n\n      this.fpsLimit = this.options.fpsLimit > 0 ? this.options.fpsLimit : 60;\n      this.options.setTheme(undefined);\n      this.eventListeners = new Utils_1.EventListeners(this);\n\n      if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n        this.intersectionObserver = new IntersectionObserver(entries => this.intersectionManager(entries));\n      }\n    }\n\n    play(force) {\n      const needsUpdate = this.paused || force;\n\n      if (this.firstStart && !this.options.autoPlay) {\n        this.firstStart = false;\n        return;\n      }\n\n      if (this.paused) {\n        this.paused = false;\n      }\n\n      if (needsUpdate) {\n        for (const [, plugin] of this.plugins) {\n          if (plugin.play) {\n            plugin.play();\n          }\n        }\n\n        this.lastFrameTime = performance.now();\n      }\n\n      this.draw();\n    }\n\n    pause() {\n      if (this.drawAnimationFrame !== undefined) {\n        Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n        delete this.drawAnimationFrame;\n      }\n\n      if (this.paused) {\n        return;\n      }\n\n      for (const [, plugin] of this.plugins) {\n        if (plugin.pause) {\n          plugin.pause();\n        }\n      }\n\n      if (!this.pageHidden) {\n        this.paused = true;\n      }\n    }\n\n    draw() {\n      this.drawAnimationFrame = Utils_1.Utils.animate(timestamp => this.drawer.nextFrame(timestamp));\n    }\n\n    getAnimationStatus() {\n      return !this.paused;\n    }\n\n    setNoise(noiseOrGenerator, init, update) {\n      if (!noiseOrGenerator) {\n        return;\n      }\n\n      if (typeof noiseOrGenerator === \"function\") {\n        this.noise.generate = noiseOrGenerator;\n\n        if (init) {\n          this.noise.init = init;\n        }\n\n        if (update) {\n          this.noise.update = update;\n        }\n      } else {\n        if (noiseOrGenerator.generate) {\n          this.noise.generate = noiseOrGenerator.generate;\n        }\n\n        if (noiseOrGenerator.init) {\n          this.noise.init = noiseOrGenerator.init;\n        }\n\n        if (noiseOrGenerator.update) {\n          this.noise.update = noiseOrGenerator.update;\n        }\n      }\n    }\n\n    densityAutoParticles() {\n      if (!this.options.particles.number.density.enable) {\n        return;\n      }\n\n      this.initDensityFactor();\n      const numberOptions = this.options.particles.number;\n      const optParticlesNumber = numberOptions.value;\n      const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n      const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * this.density;\n      const particlesCount = this.particles.count;\n\n      if (particlesCount < particlesNumber) {\n        this.particles.push(Math.abs(particlesNumber - particlesCount));\n      } else if (particlesCount > particlesNumber) {\n        this.particles.removeQuantity(particlesCount - particlesNumber);\n      }\n    }\n\n    destroy() {\n      this.stop();\n      this.canvas.destroy();\n\n      for (const [, drawer] of this.drawers) {\n        if (drawer.destroy) {\n          drawer.destroy(this);\n        }\n      }\n\n      for (const key of this.drawers.keys()) {\n        this.drawers.delete(key);\n      }\n\n      this.destroyed = true;\n    }\n\n    exportImg(callback) {\n      this.exportImage(callback);\n    }\n\n    exportImage(callback, type, quality) {\n      var _a;\n\n      return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n\n    exportConfiguration() {\n      return JSON.stringify(this.options, undefined, 2);\n    }\n\n    refresh() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.stop();\n        yield this.start();\n      });\n    }\n\n    stop() {\n      if (!this.started) {\n        return;\n      }\n\n      this.firstStart = true;\n      this.started = false;\n      this.eventListeners.removeListeners();\n      this.pause();\n      this.particles.clear();\n      this.canvas.clear();\n\n      if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n        this.intersectionObserver.observe(this.interactivity.element);\n      }\n\n      for (const [, plugin] of this.plugins) {\n        if (plugin.stop) {\n          plugin.stop();\n        }\n      }\n\n      for (const key of this.plugins.keys()) {\n        this.plugins.delete(key);\n      }\n\n      this.particles.linksColors = new Map();\n      delete this.particles.grabLineColor;\n      delete this.particles.linksColor;\n    }\n\n    loadTheme(name) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.options.setTheme(name);\n        yield this.refresh();\n      });\n    }\n\n    start() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.started) {\n          return;\n        }\n\n        yield this.init();\n        this.started = true;\n        this.eventListeners.addListeners();\n\n        if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n          this.intersectionObserver.observe(this.interactivity.element);\n        }\n\n        for (const [, plugin] of this.plugins) {\n          if (plugin.startAsync !== undefined) {\n            yield plugin.startAsync();\n          } else if (plugin.start !== undefined) {\n            plugin.start();\n          }\n        }\n\n        this.play();\n      });\n    }\n\n    init() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.retina.init();\n        this.canvas.init();\n        this.fpsLimit = this.options.fpsLimit > 0 ? this.options.fpsLimit : 60;\n        const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n\n        for (const [id, plugin] of availablePlugins) {\n          this.plugins.set(id, plugin);\n        }\n\n        for (const [, drawer] of this.drawers) {\n          if (drawer.init) {\n            yield drawer.init(this);\n          }\n        }\n\n        for (const [, plugin] of this.plugins) {\n          if (plugin.init) {\n            plugin.init(this.options);\n          } else if (plugin.initAsync !== undefined) {\n            yield plugin.initAsync(this.options);\n          }\n        }\n\n        this.canvas.windowResize();\n        this.particles.init();\n      });\n    }\n\n    initDensityFactor() {\n      const densityOptions = this.options.particles.number.density;\n\n      if (!this.canvas.element || !densityOptions.enable) {\n        return;\n      }\n\n      const canvas = this.canvas.element;\n      const pxRatio = this.retina.pixelRatio;\n      this.density = canvas.width * canvas.height / (densityOptions.factor * pxRatio * pxRatio * densityOptions.area);\n    }\n\n    intersectionManager(entries) {\n      if (!this.options.pauseOnOutsideViewport) {\n        return;\n      }\n\n      for (const entry of entries) {\n        if (entry.target !== this.interactivity.element) {\n          continue;\n        }\n\n        if (entry.isIntersecting) {\n          this.play();\n        } else {\n          this.pause();\n        }\n      }\n    }\n\n  }\n\n  exports.Container = Container;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Core/Container.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","Container","Canvas_1","Particles_1","Retina_1","FrameManager_1","Options_1","Utils_1","constructor","id","sourceOptions","presets","firstStart","started","destroyed","paused","lastFrameTime","pageHidden","retina","Retina","canvas","Canvas","particles","Particles","drawer","FrameManager","noise","generate","angle","Math","random","PI","length","init","update","interactivity","mouse","clicking","inside","bubble","repulse","attract","plugins","Map","drawers","density","options","Options","preset","load","Plugins","getPreset","shapes","getSupportedShapes","type","getShapeDrawer","set","fpsLimit","setTheme","eventListeners","EventListeners","IntersectionObserver","intersectionObserver","entries","intersectionManager","play","force","needsUpdate","autoPlay","plugin","performance","now","draw","pause","drawAnimationFrame","Utils","cancelAnimation","animate","timestamp","nextFrame","getAnimationStatus","setNoise","noiseOrGenerator","densityAutoParticles","number","enable","initDensityFactor","numberOptions","optParticlesNumber","optParticlesLimit","limit","particlesNumber","min","particlesCount","count","push","abs","removeQuantity","destroy","stop","key","keys","delete","exportImg","callback","exportImage","quality","_a","element","toBlob","exportConfiguration","JSON","stringify","refresh","start","removeListeners","clear","HTMLElement","observe","linksColors","grabLineColor","linksColor","loadTheme","name","addListeners","startAsync","availablePlugins","getAvailablePlugins","initAsync","windowResize","densityOptions","pxRatio","pixelRatio","width","height","factor","area","pauseOnOutsideViewport","entry","target","isIntersecting"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./Canvas\", \"./Particles\", \"./Retina\", \"./FrameManager\", \"../Options/Classes/Options\", \"../Utils\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Container = void 0;\n    const Canvas_1 = require(\"./Canvas\");\n    const Particles_1 = require(\"./Particles\");\n    const Retina_1 = require(\"./Retina\");\n    const FrameManager_1 = require(\"./FrameManager\");\n    const Options_1 = require(\"../Options/Classes/Options\");\n    const Utils_1 = require(\"../Utils\");\n    class Container {\n        constructor(id, sourceOptions, ...presets) {\n            this.id = id;\n            this.sourceOptions = sourceOptions;\n            this.firstStart = true;\n            this.started = false;\n            this.destroyed = false;\n            this.paused = true;\n            this.lastFrameTime = 0;\n            this.pageHidden = false;\n            this.retina = new Retina_1.Retina(this);\n            this.canvas = new Canvas_1.Canvas(this);\n            this.particles = new Particles_1.Particles(this);\n            this.drawer = new FrameManager_1.FrameManager(this);\n            this.noise = {\n                generate: () => {\n                    return {\n                        angle: Math.random() * Math.PI * 2,\n                        length: Math.random(),\n                    };\n                },\n                init: () => {\n                },\n                update: () => {\n                },\n            };\n            this.interactivity = {\n                mouse: {\n                    clicking: false,\n                    inside: false,\n                },\n            };\n            this.bubble = {};\n            this.repulse = { particles: [] };\n            this.attract = { particles: [] };\n            this.plugins = new Map();\n            this.drawers = new Map();\n            this.density = 1;\n            this.options = new Options_1.Options();\n            for (const preset of presets) {\n                this.options.load(Utils_1.Plugins.getPreset(preset));\n            }\n            const shapes = Utils_1.Plugins.getSupportedShapes();\n            for (const type of shapes) {\n                const drawer = Utils_1.Plugins.getShapeDrawer(type);\n                if (drawer) {\n                    this.drawers.set(type, drawer);\n                }\n            }\n            if (this.sourceOptions) {\n                this.options.load(this.sourceOptions);\n            }\n            this.fpsLimit = this.options.fpsLimit > 0 ? this.options.fpsLimit : 60;\n            this.options.setTheme(undefined);\n            this.eventListeners = new Utils_1.EventListeners(this);\n            if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n                this.intersectionObserver = new IntersectionObserver((entries) => this.intersectionManager(entries));\n            }\n        }\n        play(force) {\n            const needsUpdate = this.paused || force;\n            if (this.firstStart && !this.options.autoPlay) {\n                this.firstStart = false;\n                return;\n            }\n            if (this.paused) {\n                this.paused = false;\n            }\n            if (needsUpdate) {\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.play) {\n                        plugin.play();\n                    }\n                }\n                this.lastFrameTime = performance.now();\n            }\n            this.draw();\n        }\n        pause() {\n            if (this.drawAnimationFrame !== undefined) {\n                Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n                delete this.drawAnimationFrame;\n            }\n            if (this.paused) {\n                return;\n            }\n            for (const [, plugin] of this.plugins) {\n                if (plugin.pause) {\n                    plugin.pause();\n                }\n            }\n            if (!this.pageHidden) {\n                this.paused = true;\n            }\n        }\n        draw() {\n            this.drawAnimationFrame = Utils_1.Utils.animate((timestamp) => this.drawer.nextFrame(timestamp));\n        }\n        getAnimationStatus() {\n            return !this.paused;\n        }\n        setNoise(noiseOrGenerator, init, update) {\n            if (!noiseOrGenerator) {\n                return;\n            }\n            if (typeof noiseOrGenerator === \"function\") {\n                this.noise.generate = noiseOrGenerator;\n                if (init) {\n                    this.noise.init = init;\n                }\n                if (update) {\n                    this.noise.update = update;\n                }\n            }\n            else {\n                if (noiseOrGenerator.generate) {\n                    this.noise.generate = noiseOrGenerator.generate;\n                }\n                if (noiseOrGenerator.init) {\n                    this.noise.init = noiseOrGenerator.init;\n                }\n                if (noiseOrGenerator.update) {\n                    this.noise.update = noiseOrGenerator.update;\n                }\n            }\n        }\n        densityAutoParticles() {\n            if (!this.options.particles.number.density.enable) {\n                return;\n            }\n            this.initDensityFactor();\n            const numberOptions = this.options.particles.number;\n            const optParticlesNumber = numberOptions.value;\n            const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n            const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * this.density;\n            const particlesCount = this.particles.count;\n            if (particlesCount < particlesNumber) {\n                this.particles.push(Math.abs(particlesNumber - particlesCount));\n            }\n            else if (particlesCount > particlesNumber) {\n                this.particles.removeQuantity(particlesCount - particlesNumber);\n            }\n        }\n        destroy() {\n            this.stop();\n            this.canvas.destroy();\n            for (const [, drawer] of this.drawers) {\n                if (drawer.destroy) {\n                    drawer.destroy(this);\n                }\n            }\n            for (const key of this.drawers.keys()) {\n                this.drawers.delete(key);\n            }\n            this.destroyed = true;\n        }\n        exportImg(callback) {\n            this.exportImage(callback);\n        }\n        exportImage(callback, type, quality) {\n            var _a;\n            return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n        }\n        exportConfiguration() {\n            return JSON.stringify(this.options, undefined, 2);\n        }\n        refresh() {\n            return __awaiter(this, void 0, void 0, function* () {\n                this.stop();\n                yield this.start();\n            });\n        }\n        stop() {\n            if (!this.started) {\n                return;\n            }\n            this.firstStart = true;\n            this.started = false;\n            this.eventListeners.removeListeners();\n            this.pause();\n            this.particles.clear();\n            this.canvas.clear();\n            if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n                this.intersectionObserver.observe(this.interactivity.element);\n            }\n            for (const [, plugin] of this.plugins) {\n                if (plugin.stop) {\n                    plugin.stop();\n                }\n            }\n            for (const key of this.plugins.keys()) {\n                this.plugins.delete(key);\n            }\n            this.particles.linksColors = new Map();\n            delete this.particles.grabLineColor;\n            delete this.particles.linksColor;\n        }\n        loadTheme(name) {\n            return __awaiter(this, void 0, void 0, function* () {\n                this.options.setTheme(name);\n                yield this.refresh();\n            });\n        }\n        start() {\n            return __awaiter(this, void 0, void 0, function* () {\n                if (this.started) {\n                    return;\n                }\n                yield this.init();\n                this.started = true;\n                this.eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n                    this.intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.startAsync !== undefined) {\n                        yield plugin.startAsync();\n                    }\n                    else if (plugin.start !== undefined) {\n                        plugin.start();\n                    }\n                }\n                this.play();\n            });\n        }\n        init() {\n            return __awaiter(this, void 0, void 0, function* () {\n                this.retina.init();\n                this.canvas.init();\n                this.fpsLimit = this.options.fpsLimit > 0 ? this.options.fpsLimit : 60;\n                const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n                for (const [id, plugin] of availablePlugins) {\n                    this.plugins.set(id, plugin);\n                }\n                for (const [, drawer] of this.drawers) {\n                    if (drawer.init) {\n                        yield drawer.init(this);\n                    }\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.init) {\n                        plugin.init(this.options);\n                    }\n                    else if (plugin.initAsync !== undefined) {\n                        yield plugin.initAsync(this.options);\n                    }\n                }\n                this.canvas.windowResize();\n                this.particles.init();\n            });\n        }\n        initDensityFactor() {\n            const densityOptions = this.options.particles.number.density;\n            if (!this.canvas.element || !densityOptions.enable) {\n                return;\n            }\n            const canvas = this.canvas.element;\n            const pxRatio = this.retina.pixelRatio;\n            this.density =\n                (canvas.width * canvas.height) / (densityOptions.factor * pxRatio * pxRatio * densityOptions.area);\n        }\n        intersectionManager(entries) {\n            if (!this.options.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        }\n    }\n    exports.Container = Container;\n});\n"]},"metadata":{},"sourceType":"script"}