{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"./Interactivity/Interactivity\", \"./Particles/Particles\", \"./BackgroundMask/BackgroundMask\", \"./Background/Background\", \"./Infection/Infection\", \"../../Utils\", \"./Theme/Theme\", \"../../Enums/Modes\", \"./BackgroundMode/BackgroundMode\", \"./Motion/Motion\", \"./ManualParticle\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Options = void 0;\n\n  const Interactivity_1 = require(\"./Interactivity/Interactivity\");\n\n  const Particles_1 = require(\"./Particles/Particles\");\n\n  const BackgroundMask_1 = require(\"./BackgroundMask/BackgroundMask\");\n\n  const Background_1 = require(\"./Background/Background\");\n\n  const Infection_1 = require(\"./Infection/Infection\");\n\n  const Utils_1 = require(\"../../Utils\");\n\n  const Theme_1 = require(\"./Theme/Theme\");\n\n  const Modes_1 = require(\"../../Enums/Modes\");\n\n  const BackgroundMode_1 = require(\"./BackgroundMode/BackgroundMode\");\n\n  const Motion_1 = require(\"./Motion/Motion\");\n\n  const ManualParticle_1 = require(\"./ManualParticle\");\n\n  class Options {\n    constructor() {\n      this.autoPlay = true;\n      this.background = new Background_1.Background();\n      this.backgroundMask = new BackgroundMask_1.BackgroundMask();\n      this.backgroundMode = new BackgroundMode_1.BackgroundMode();\n      this.detectRetina = true;\n      this.fpsLimit = 30;\n      this.infection = new Infection_1.Infection();\n      this.interactivity = new Interactivity_1.Interactivity();\n      this.manualParticles = [];\n      this.motion = new Motion_1.Motion();\n      this.particles = new Particles_1.Particles();\n      this.pauseOnBlur = true;\n      this.pauseOnOutsideViewport = false;\n      this.themes = [];\n    }\n\n    get fps_limit() {\n      return this.fpsLimit;\n    }\n\n    set fps_limit(value) {\n      this.fpsLimit = value;\n    }\n\n    get retina_detect() {\n      return this.detectRetina;\n    }\n\n    set retina_detect(value) {\n      this.detectRetina = value;\n    }\n\n    load(data) {\n      var _a, _b;\n\n      if (data === undefined) {\n        return;\n      }\n\n      if (data.preset !== undefined) {\n        if (data.preset instanceof Array) {\n          for (const preset of data.preset) {\n            this.importPreset(preset);\n          }\n        } else {\n          this.importPreset(data.preset);\n        }\n      }\n\n      if (data.autoPlay !== undefined) {\n        this.autoPlay = data.autoPlay;\n      }\n\n      const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n\n      if (detectRetina !== undefined) {\n        this.detectRetina = detectRetina;\n      }\n\n      const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n\n      if (fpsLimit !== undefined) {\n        this.fpsLimit = fpsLimit;\n      }\n\n      if (data.pauseOnBlur !== undefined) {\n        this.pauseOnBlur = data.pauseOnBlur;\n      }\n\n      if (data.pauseOnOutsideViewport !== undefined) {\n        this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n      }\n\n      this.background.load(data.background);\n      this.backgroundMode.load(data.backgroundMode);\n      this.backgroundMask.load(data.backgroundMask);\n      this.infection.load(data.infection);\n      this.interactivity.load(data.interactivity);\n\n      if (data.manualParticles !== undefined) {\n        this.manualParticles = data.manualParticles.map(t => {\n          const tmp = new ManualParticle_1.ManualParticle();\n          tmp.load(t);\n          return tmp;\n        });\n      }\n\n      this.motion.load(data.motion);\n      this.particles.load(data.particles);\n      Utils_1.Plugins.loadOptions(this, data);\n\n      if (data.themes !== undefined) {\n        for (const theme of data.themes) {\n          const optTheme = new Theme_1.Theme();\n          optTheme.load(theme);\n          this.themes.push(optTheme);\n        }\n      }\n    }\n\n    setTheme(name) {\n      if (name) {\n        const chosenTheme = this.themes.find(theme => theme.name === name);\n\n        if (chosenTheme) {\n          this.load(chosenTheme.options);\n        }\n      } else {\n        const clientDarkMode = typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n        let defaultTheme = this.themes.find(theme => theme.default.value && (theme.default.mode === Modes_1.ThemeMode.dark && clientDarkMode || theme.default.mode === Modes_1.ThemeMode.light && !clientDarkMode));\n\n        if (!defaultTheme) {\n          defaultTheme = this.themes.find(theme => theme.default.value && theme.default.mode === Modes_1.ThemeMode.any);\n        }\n\n        if (defaultTheme) {\n          this.load(defaultTheme.options);\n        }\n      }\n    }\n\n    importPreset(preset) {\n      this.load(Utils_1.Plugins.getPreset(preset));\n    }\n\n  }\n\n  exports.Options = Options;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Options/Classes/Options.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Options","Interactivity_1","Particles_1","BackgroundMask_1","Background_1","Infection_1","Utils_1","Theme_1","Modes_1","BackgroundMode_1","Motion_1","ManualParticle_1","constructor","autoPlay","background","Background","backgroundMask","BackgroundMask","backgroundMode","BackgroundMode","detectRetina","fpsLimit","infection","Infection","interactivity","Interactivity","manualParticles","motion","Motion","particles","Particles","pauseOnBlur","pauseOnOutsideViewport","themes","fps_limit","retina_detect","load","data","_a","_b","preset","Array","importPreset","map","t","tmp","ManualParticle","Plugins","loadOptions","theme","optTheme","Theme","push","setTheme","name","chosenTheme","find","options","clientDarkMode","matchMedia","matches","defaultTheme","default","mode","ThemeMode","dark","light","any","getPreset"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./Interactivity/Interactivity\", \"./Particles/Particles\", \"./BackgroundMask/BackgroundMask\", \"./Background/Background\", \"./Infection/Infection\", \"../../Utils\", \"./Theme/Theme\", \"../../Enums/Modes\", \"./BackgroundMode/BackgroundMode\", \"./Motion/Motion\", \"./ManualParticle\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Options = void 0;\n    const Interactivity_1 = require(\"./Interactivity/Interactivity\");\n    const Particles_1 = require(\"./Particles/Particles\");\n    const BackgroundMask_1 = require(\"./BackgroundMask/BackgroundMask\");\n    const Background_1 = require(\"./Background/Background\");\n    const Infection_1 = require(\"./Infection/Infection\");\n    const Utils_1 = require(\"../../Utils\");\n    const Theme_1 = require(\"./Theme/Theme\");\n    const Modes_1 = require(\"../../Enums/Modes\");\n    const BackgroundMode_1 = require(\"./BackgroundMode/BackgroundMode\");\n    const Motion_1 = require(\"./Motion/Motion\");\n    const ManualParticle_1 = require(\"./ManualParticle\");\n    class Options {\n        constructor() {\n            this.autoPlay = true;\n            this.background = new Background_1.Background();\n            this.backgroundMask = new BackgroundMask_1.BackgroundMask();\n            this.backgroundMode = new BackgroundMode_1.BackgroundMode();\n            this.detectRetina = true;\n            this.fpsLimit = 30;\n            this.infection = new Infection_1.Infection();\n            this.interactivity = new Interactivity_1.Interactivity();\n            this.manualParticles = [];\n            this.motion = new Motion_1.Motion();\n            this.particles = new Particles_1.Particles();\n            this.pauseOnBlur = true;\n            this.pauseOnOutsideViewport = false;\n            this.themes = [];\n        }\n        get fps_limit() {\n            return this.fpsLimit;\n        }\n        set fps_limit(value) {\n            this.fpsLimit = value;\n        }\n        get retina_detect() {\n            return this.detectRetina;\n        }\n        set retina_detect(value) {\n            this.detectRetina = value;\n        }\n        load(data) {\n            var _a, _b;\n            if (data === undefined) {\n                return;\n            }\n            if (data.preset !== undefined) {\n                if (data.preset instanceof Array) {\n                    for (const preset of data.preset) {\n                        this.importPreset(preset);\n                    }\n                }\n                else {\n                    this.importPreset(data.preset);\n                }\n            }\n            if (data.autoPlay !== undefined) {\n                this.autoPlay = data.autoPlay;\n            }\n            const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n            if (detectRetina !== undefined) {\n                this.detectRetina = detectRetina;\n            }\n            const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n            if (fpsLimit !== undefined) {\n                this.fpsLimit = fpsLimit;\n            }\n            if (data.pauseOnBlur !== undefined) {\n                this.pauseOnBlur = data.pauseOnBlur;\n            }\n            if (data.pauseOnOutsideViewport !== undefined) {\n                this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n            }\n            this.background.load(data.background);\n            this.backgroundMode.load(data.backgroundMode);\n            this.backgroundMask.load(data.backgroundMask);\n            this.infection.load(data.infection);\n            this.interactivity.load(data.interactivity);\n            if (data.manualParticles !== undefined) {\n                this.manualParticles = data.manualParticles.map((t) => {\n                    const tmp = new ManualParticle_1.ManualParticle();\n                    tmp.load(t);\n                    return tmp;\n                });\n            }\n            this.motion.load(data.motion);\n            this.particles.load(data.particles);\n            Utils_1.Plugins.loadOptions(this, data);\n            if (data.themes !== undefined) {\n                for (const theme of data.themes) {\n                    const optTheme = new Theme_1.Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n            }\n        }\n        setTheme(name) {\n            if (name) {\n                const chosenTheme = this.themes.find((theme) => theme.name === name);\n                if (chosenTheme) {\n                    this.load(chosenTheme.options);\n                }\n            }\n            else {\n                const clientDarkMode = typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n                let defaultTheme = this.themes.find((theme) => theme.default.value &&\n                    ((theme.default.mode === Modes_1.ThemeMode.dark && clientDarkMode) ||\n                        (theme.default.mode === Modes_1.ThemeMode.light && !clientDarkMode)));\n                if (!defaultTheme) {\n                    defaultTheme = this.themes.find((theme) => theme.default.value && theme.default.mode === Modes_1.ThemeMode.any);\n                }\n                if (defaultTheme) {\n                    this.load(defaultTheme.options);\n                }\n            }\n        }\n        importPreset(preset) {\n            this.load(Utils_1.Plugins.getPreset(preset));\n        }\n    }\n    exports.Options = Options;\n});\n"]},"metadata":{},"sourceType":"script"}