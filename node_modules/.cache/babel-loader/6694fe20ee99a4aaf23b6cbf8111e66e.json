{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"./Utils\", \"./Constants\", \"./NumberUtils\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ColorUtils = void 0;\n\n  const Utils_1 = require(\"./Utils\");\n\n  const Constants_1 = require(\"./Constants\");\n\n  const NumberUtils_1 = require(\"./NumberUtils\");\n\n  function hue2rgb(p, q, t) {\n    let tCalc = t;\n\n    if (tCalc < 0) {\n      tCalc += 1;\n    }\n\n    if (tCalc > 1) {\n      tCalc -= 1;\n    }\n\n    if (tCalc < 1 / 6) {\n      return p + (q - p) * 6 * tCalc;\n    }\n\n    if (tCalc < 1 / 2) {\n      return q;\n    }\n\n    if (tCalc < 2 / 3) {\n      return p + (q - p) * (2 / 3 - tCalc) * 6;\n    }\n\n    return p;\n  }\n\n  function stringToRgba(input) {\n    if (input.startsWith(\"rgb\")) {\n      const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n      const result = regex.exec(input);\n      return result ? {\n        a: result.length > 4 ? parseFloat(result[5]) : 1,\n        b: parseInt(result[3], 10),\n        g: parseInt(result[2], 10),\n        r: parseInt(result[1], 10)\n      } : undefined;\n    } else if (input.startsWith(\"hsl\")) {\n      const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n      const result = regex.exec(input);\n      return result ? ColorUtils.hslaToRgba({\n        a: result.length > 4 ? parseFloat(result[5]) : 1,\n        h: parseInt(result[1], 10),\n        l: parseInt(result[3], 10),\n        s: parseInt(result[2], 10)\n      }) : undefined;\n    } else if (input.startsWith(\"hsv\")) {\n      const regex = /hsva?\\(\\s*(\\d+)Â°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n      const result = regex.exec(input);\n      return result ? ColorUtils.hsvaToRgba({\n        a: result.length > 4 ? parseFloat(result[5]) : 1,\n        h: parseInt(result[1], 10),\n        s: parseInt(result[2], 10),\n        v: parseInt(result[3], 10)\n      }) : undefined;\n    } else {\n      const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n      const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n      });\n      const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n      const result = regex.exec(hexFixed);\n      return result ? {\n        a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n        b: parseInt(result[3], 16),\n        g: parseInt(result[2], 16),\n        r: parseInt(result[1], 16)\n      } : undefined;\n    }\n  }\n\n  class ColorUtils {\n    static colorToRgb(input, index, useIndex = true) {\n      var _a, _b, _c;\n\n      if (input === undefined) {\n        return;\n      }\n\n      const color = typeof input === \"string\" ? {\n        value: input\n      } : input;\n      let res;\n\n      if (typeof color.value === \"string\") {\n        if (color.value === Constants_1.Constants.randomColorValue) {\n          res = ColorUtils.getRandomRgbColor();\n        } else {\n          res = ColorUtils.stringToRgb(color.value);\n        }\n      } else {\n        if (color.value instanceof Array) {\n          const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n          res = ColorUtils.colorToRgb({\n            value: colorSelected\n          });\n        } else {\n          const colorValue = color.value;\n          const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n\n          if (rgbColor.r !== undefined) {\n            res = rgbColor;\n          } else {\n            const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n\n            if (hslColor.h !== undefined && hslColor.l !== undefined) {\n              res = ColorUtils.hslToRgb(hslColor);\n            } else {\n              const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n\n              if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n                res = ColorUtils.hsvToRgb(hsvColor);\n              }\n            }\n          }\n        }\n      }\n\n      return res;\n    }\n\n    static colorToHsl(color, index, useIndex = true) {\n      const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n      return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n    }\n\n    static rgbToHsl(color) {\n      const r1 = color.r / 255;\n      const g1 = color.g / 255;\n      const b1 = color.b / 255;\n      const max = Math.max(r1, g1, b1);\n      const min = Math.min(r1, g1, b1);\n      const res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0\n      };\n\n      if (max != min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min);\n      }\n\n      res.l *= 100;\n      res.s *= 100;\n      res.h *= 60;\n\n      if (res.h < 0) {\n        res.h += 360;\n      }\n\n      return res;\n    }\n\n    static stringToAlpha(input) {\n      var _a;\n\n      return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n\n    static stringToRgb(input) {\n      return stringToRgba(input);\n    }\n\n    static hslToRgb(hsl) {\n      const result = {\n        b: 0,\n        g: 0,\n        r: 0\n      };\n      const hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100\n      };\n\n      if (hslPercent.s === 0) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n      } else {\n        const q = hslPercent.l < 0.5 ? hslPercent.l * (1 + hslPercent.s) : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n        const p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n      }\n\n      result.r = Math.floor(result.r * 255);\n      result.g = Math.floor(result.g * 255);\n      result.b = Math.floor(result.b * 255);\n      return result;\n    }\n\n    static hslaToRgba(hsla) {\n      const rgbResult = ColorUtils.hslToRgb(hsla);\n      return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r\n      };\n    }\n\n    static hslToHsv(hsl) {\n      const l = hsl.l / 100,\n            sl = hsl.s / 100;\n      const v = l + sl * Math.min(l, 1 - l),\n            sv = !v ? 0 : 2 * (1 - l / v);\n      return {\n        h: hsl.h,\n        s: sv * 100,\n        v: v * 100\n      };\n    }\n\n    static hslaToHsva(hsla) {\n      const hsvResult = ColorUtils.hslToHsv(hsla);\n      return {\n        a: hsla.a,\n        h: hsvResult.h,\n        s: hsvResult.s,\n        v: hsvResult.v\n      };\n    }\n\n    static hsvToHsl(hsv) {\n      const v = hsv.v / 100,\n            sv = hsv.s / 100;\n      const l = v * (1 - sv / 2),\n            sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n      return {\n        h: hsv.h,\n        l: l * 100,\n        s: sl * 100\n      };\n    }\n\n    static hsvaToHsla(hsva) {\n      const hslResult = ColorUtils.hsvToHsl(hsva);\n      return {\n        a: hsva.a,\n        h: hslResult.h,\n        l: hslResult.l,\n        s: hslResult.s\n      };\n    }\n\n    static hsvToRgb(hsv) {\n      const result = {\n        b: 0,\n        g: 0,\n        r: 0\n      };\n      const hsvPercent = {\n        h: hsv.h / 60,\n        s: hsv.s / 100,\n        v: hsv.v / 100\n      };\n      const c = hsvPercent.v * hsvPercent.s,\n            x = c * (1 - Math.abs(hsvPercent.h % 2 - 1));\n      let tempRgb;\n\n      if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n        tempRgb = {\n          r: c,\n          g: x,\n          b: 0\n        };\n      } else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n        tempRgb = {\n          r: x,\n          g: c,\n          b: 0\n        };\n      } else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n        tempRgb = {\n          r: 0,\n          g: c,\n          b: x\n        };\n      } else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n        tempRgb = {\n          r: 0,\n          g: x,\n          b: c\n        };\n      } else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n        tempRgb = {\n          r: x,\n          g: 0,\n          b: c\n        };\n      } else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n        tempRgb = {\n          r: c,\n          g: 0,\n          b: x\n        };\n      }\n\n      if (tempRgb) {\n        const m = hsvPercent.v - c;\n        result.r = Math.floor((tempRgb.r + m) * 255);\n        result.g = Math.floor((tempRgb.g + m) * 255);\n        result.b = Math.floor((tempRgb.b + m) * 255);\n      }\n\n      return result;\n    }\n\n    static hsvaToRgba(hsva) {\n      const rgbResult = ColorUtils.hsvToRgb(hsva);\n      return {\n        a: hsva.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r\n      };\n    }\n\n    static rgbToHsv(rgb) {\n      const rgbPercent = {\n        r: rgb.r / 255,\n        g: rgb.g / 255,\n        b: rgb.b / 255\n      },\n            xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n            xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n            v = xMax,\n            c = xMax - xMin;\n      let h = 0;\n\n      if (v === rgbPercent.r) {\n        h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n      } else if (v === rgbPercent.g) {\n        h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n      } else if (v === rgbPercent.b) {\n        h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n      }\n\n      const s = !v ? 0 : c / v;\n      return {\n        h,\n        s: s * 100,\n        v: v * 100\n      };\n    }\n\n    static rgbaToHsva(rgba) {\n      const hsvResult = ColorUtils.rgbToHsv(rgba);\n      return {\n        a: rgba.a,\n        h: hsvResult.h,\n        s: hsvResult.s,\n        v: hsvResult.v\n      };\n    }\n\n    static getRandomRgbColor(min) {\n      const fixedMin = min !== null && min !== void 0 ? min : 0;\n      return {\n        b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256)),\n        g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256)),\n        r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256))\n      };\n    }\n\n    static getStyleFromRgb(color, opacity) {\n      return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n\n    static getStyleFromHsl(color, opacity) {\n      return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n\n    static getStyleFromHsv(color, opacity) {\n      return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n    }\n\n    static mix(color1, color2, size1, size2) {\n      let rgb1 = color1;\n      let rgb2 = color2;\n\n      if (rgb1.r === undefined) {\n        rgb1 = ColorUtils.hslToRgb(color1);\n      }\n\n      if (rgb2.r === undefined) {\n        rgb2 = ColorUtils.hslToRgb(color2);\n      }\n\n      return {\n        b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n        g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n        r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2)\n      };\n    }\n\n    static replaceColorSvg(image, color, opacity) {\n      if (!image.svgData) {\n        return \"\";\n      }\n\n      const svgXml = image.svgData;\n      const rgbHex = /#([0-9A-F]{3,6})/gi;\n      return svgXml.replace(rgbHex, () => ColorUtils.getStyleFromHsl(color, opacity));\n    }\n\n    static getLinkColor(p1, p2, linkColor) {\n      var _a, _b;\n\n      if (linkColor === Constants_1.Constants.randomColorValue) {\n        return ColorUtils.getRandomRgbColor();\n      } else if (linkColor === \"mid\") {\n        const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n        const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n\n        if (sourceColor && destColor && p2) {\n          return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        } else {\n          const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n\n          if (hslColor) {\n            return ColorUtils.hslToRgb(hslColor);\n          }\n        }\n      } else {\n        return linkColor;\n      }\n    }\n\n    static getLinkRandomColor(optColor, blink, consent) {\n      const color = typeof optColor === \"string\" ? optColor : optColor.value;\n\n      if (color === Constants_1.Constants.randomColorValue) {\n        if (consent) {\n          return ColorUtils.colorToRgb({\n            value: color\n          });\n        } else if (blink) {\n          return Constants_1.Constants.randomColorValue;\n        } else {\n          return Constants_1.Constants.midColorValue;\n        }\n      } else {\n        return ColorUtils.colorToRgb({\n          value: color\n        });\n      }\n    }\n\n  }\n\n  exports.ColorUtils = ColorUtils;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Utils/ColorUtils.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","ColorUtils","Utils_1","Constants_1","NumberUtils_1","hue2rgb","p","q","t","tCalc","stringToRgba","input","startsWith","regex","result","exec","a","length","parseFloat","b","parseInt","g","r","hslaToRgba","h","l","s","hsvaToRgba","shorthandRegex","hexFixed","replace","_m","colorToRgb","index","useIndex","_a","_b","_c","color","res","Constants","randomColorValue","getRandomRgbColor","stringToRgb","Array","colorSelected","Utils","itemFromArray","colorValue","rgbColor","rgb","hslColor","hsl","hslToRgb","hsvColor","hsv","hsvToRgb","colorToHsl","rgbToHsl","r1","g1","b1","max","Math","min","stringToAlpha","hslPercent","floor","hsla","rgbResult","hslToHsv","sl","sv","hslaToHsva","hsvResult","hsvToHsl","hsvaToHsla","hsva","hslResult","hsvPercent","c","x","abs","tempRgb","m","rgbToHsv","rgbPercent","xMax","xMin","rgbaToHsva","rgba","fixedMin","NumberUtils","randomInRange","getStyleFromRgb","opacity","getStyleFromHsl","getStyleFromHsv","mix","color1","color2","size1","size2","rgb1","rgb2","replaceColorSvg","image","svgData","svgXml","rgbHex","getLinkColor","p1","p2","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","getLinkRandomColor","optColor","blink","consent","midColorValue"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./Utils\", \"./Constants\", \"./NumberUtils\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.ColorUtils = void 0;\n    const Utils_1 = require(\"./Utils\");\n    const Constants_1 = require(\"./Constants\");\n    const NumberUtils_1 = require(\"./NumberUtils\");\n    function hue2rgb(p, q, t) {\n        let tCalc = t;\n        if (tCalc < 0) {\n            tCalc += 1;\n        }\n        if (tCalc > 1) {\n            tCalc -= 1;\n        }\n        if (tCalc < 1 / 6) {\n            return p + (q - p) * 6 * tCalc;\n        }\n        if (tCalc < 1 / 2) {\n            return q;\n        }\n        if (tCalc < 2 / 3) {\n            return p + (q - p) * (2 / 3 - tCalc) * 6;\n        }\n        return p;\n    }\n    function stringToRgba(input) {\n        if (input.startsWith(\"rgb\")) {\n            const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? {\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    b: parseInt(result[3], 10),\n                    g: parseInt(result[2], 10),\n                    r: parseInt(result[1], 10),\n                }\n                : undefined;\n        }\n        else if (input.startsWith(\"hsl\")) {\n            const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? ColorUtils.hslaToRgba({\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    h: parseInt(result[1], 10),\n                    l: parseInt(result[3], 10),\n                    s: parseInt(result[2], 10),\n                })\n                : undefined;\n        }\n        else if (input.startsWith(\"hsv\")) {\n            const regex = /hsva?\\(\\s*(\\d+)Â°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? ColorUtils.hsvaToRgba({\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    h: parseInt(result[1], 10),\n                    s: parseInt(result[2], 10),\n                    v: parseInt(result[3], 10),\n                })\n                : undefined;\n        }\n        else {\n            const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n            const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n                return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n            });\n            const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n            const result = regex.exec(hexFixed);\n            return result\n                ? {\n                    a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                    b: parseInt(result[3], 16),\n                    g: parseInt(result[2], 16),\n                    r: parseInt(result[1], 16),\n                }\n                : undefined;\n        }\n    }\n    class ColorUtils {\n        static colorToRgb(input, index, useIndex = true) {\n            var _a, _b, _c;\n            if (input === undefined) {\n                return;\n            }\n            const color = typeof input === \"string\" ? { value: input } : input;\n            let res;\n            if (typeof color.value === \"string\") {\n                if (color.value === Constants_1.Constants.randomColorValue) {\n                    res = ColorUtils.getRandomRgbColor();\n                }\n                else {\n                    res = ColorUtils.stringToRgb(color.value);\n                }\n            }\n            else {\n                if (color.value instanceof Array) {\n                    const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n                    res = ColorUtils.colorToRgb({ value: colorSelected });\n                }\n                else {\n                    const colorValue = color.value;\n                    const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n                    if (rgbColor.r !== undefined) {\n                        res = rgbColor;\n                    }\n                    else {\n                        const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n                            res = ColorUtils.hslToRgb(hslColor);\n                        }\n                        else {\n                            const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n                            if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n                                res = ColorUtils.hsvToRgb(hsvColor);\n                            }\n                        }\n                    }\n                }\n            }\n            return res;\n        }\n        static colorToHsl(color, index, useIndex = true) {\n            const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n            return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n        }\n        static rgbToHsl(color) {\n            const r1 = color.r / 255;\n            const g1 = color.g / 255;\n            const b1 = color.b / 255;\n            const max = Math.max(r1, g1, b1);\n            const min = Math.min(r1, g1, b1);\n            const res = {\n                h: 0,\n                l: (max + min) / 2,\n                s: 0,\n            };\n            if (max != min) {\n                res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n                res.h =\n                    r1 === max\n                        ? (g1 - b1) / (max - min)\n                        : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n            }\n            res.l *= 100;\n            res.s *= 100;\n            res.h *= 60;\n            if (res.h < 0) {\n                res.h += 360;\n            }\n            return res;\n        }\n        static stringToAlpha(input) {\n            var _a;\n            return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n        }\n        static stringToRgb(input) {\n            return stringToRgba(input);\n        }\n        static hslToRgb(hsl) {\n            const result = { b: 0, g: 0, r: 0 };\n            const hslPercent = {\n                h: hsl.h / 360,\n                l: hsl.l / 100,\n                s: hsl.s / 100,\n            };\n            if (hslPercent.s === 0) {\n                result.b = hslPercent.l;\n                result.g = hslPercent.l;\n                result.r = hslPercent.l;\n            }\n            else {\n                const q = hslPercent.l < 0.5\n                    ? hslPercent.l * (1 + hslPercent.s)\n                    : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n                const p = 2 * hslPercent.l - q;\n                result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n                result.g = hue2rgb(p, q, hslPercent.h);\n                result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n            }\n            result.r = Math.floor(result.r * 255);\n            result.g = Math.floor(result.g * 255);\n            result.b = Math.floor(result.b * 255);\n            return result;\n        }\n        static hslaToRgba(hsla) {\n            const rgbResult = ColorUtils.hslToRgb(hsla);\n            return {\n                a: hsla.a,\n                b: rgbResult.b,\n                g: rgbResult.g,\n                r: rgbResult.r,\n            };\n        }\n        static hslToHsv(hsl) {\n            const l = hsl.l / 100, sl = hsl.s / 100;\n            const v = l + sl * Math.min(l, 1 - l), sv = !v ? 0 : 2 * (1 - l / v);\n            return {\n                h: hsl.h,\n                s: sv * 100,\n                v: v * 100,\n            };\n        }\n        static hslaToHsva(hsla) {\n            const hsvResult = ColorUtils.hslToHsv(hsla);\n            return {\n                a: hsla.a,\n                h: hsvResult.h,\n                s: hsvResult.s,\n                v: hsvResult.v,\n            };\n        }\n        static hsvToHsl(hsv) {\n            const v = hsv.v / 100, sv = hsv.s / 100;\n            const l = v * (1 - sv / 2), sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n            return {\n                h: hsv.h,\n                l: l * 100,\n                s: sl * 100,\n            };\n        }\n        static hsvaToHsla(hsva) {\n            const hslResult = ColorUtils.hsvToHsl(hsva);\n            return {\n                a: hsva.a,\n                h: hslResult.h,\n                l: hslResult.l,\n                s: hslResult.s,\n            };\n        }\n        static hsvToRgb(hsv) {\n            const result = { b: 0, g: 0, r: 0 };\n            const hsvPercent = {\n                h: hsv.h / 60,\n                s: hsv.s / 100,\n                v: hsv.v / 100,\n            };\n            const c = hsvPercent.v * hsvPercent.s, x = c * (1 - Math.abs((hsvPercent.h % 2) - 1));\n            let tempRgb;\n            if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n                tempRgb = {\n                    r: c,\n                    g: x,\n                    b: 0,\n                };\n            }\n            else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n                tempRgb = {\n                    r: x,\n                    g: c,\n                    b: 0,\n                };\n            }\n            else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n                tempRgb = {\n                    r: 0,\n                    g: c,\n                    b: x,\n                };\n            }\n            else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n                tempRgb = {\n                    r: 0,\n                    g: x,\n                    b: c,\n                };\n            }\n            else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n                tempRgb = {\n                    r: x,\n                    g: 0,\n                    b: c,\n                };\n            }\n            else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n                tempRgb = {\n                    r: c,\n                    g: 0,\n                    b: x,\n                };\n            }\n            if (tempRgb) {\n                const m = hsvPercent.v - c;\n                result.r = Math.floor((tempRgb.r + m) * 255);\n                result.g = Math.floor((tempRgb.g + m) * 255);\n                result.b = Math.floor((tempRgb.b + m) * 255);\n            }\n            return result;\n        }\n        static hsvaToRgba(hsva) {\n            const rgbResult = ColorUtils.hsvToRgb(hsva);\n            return {\n                a: hsva.a,\n                b: rgbResult.b,\n                g: rgbResult.g,\n                r: rgbResult.r,\n            };\n        }\n        static rgbToHsv(rgb) {\n            const rgbPercent = {\n                r: rgb.r / 255,\n                g: rgb.g / 255,\n                b: rgb.b / 255,\n            }, xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b), xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b), v = xMax, c = xMax - xMin;\n            let h = 0;\n            if (v === rgbPercent.r) {\n                h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n            }\n            else if (v === rgbPercent.g) {\n                h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n            }\n            else if (v === rgbPercent.b) {\n                h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n            }\n            const s = !v ? 0 : c / v;\n            return {\n                h,\n                s: s * 100,\n                v: v * 100,\n            };\n        }\n        static rgbaToHsva(rgba) {\n            const hsvResult = ColorUtils.rgbToHsv(rgba);\n            return {\n                a: rgba.a,\n                h: hsvResult.h,\n                s: hsvResult.s,\n                v: hsvResult.v,\n            };\n        }\n        static getRandomRgbColor(min) {\n            const fixedMin = min !== null && min !== void 0 ? min : 0;\n            return {\n                b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256)),\n                g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256)),\n                r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256)),\n            };\n        }\n        static getStyleFromRgb(color, opacity) {\n            return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n        }\n        static getStyleFromHsl(color, opacity) {\n            return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n        }\n        static getStyleFromHsv(color, opacity) {\n            return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n        }\n        static mix(color1, color2, size1, size2) {\n            let rgb1 = color1;\n            let rgb2 = color2;\n            if (rgb1.r === undefined) {\n                rgb1 = ColorUtils.hslToRgb(color1);\n            }\n            if (rgb2.r === undefined) {\n                rgb2 = ColorUtils.hslToRgb(color2);\n            }\n            return {\n                b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n                g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n                r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2),\n            };\n        }\n        static replaceColorSvg(image, color, opacity) {\n            if (!image.svgData) {\n                return \"\";\n            }\n            const svgXml = image.svgData;\n            const rgbHex = /#([0-9A-F]{3,6})/gi;\n            return svgXml.replace(rgbHex, () => ColorUtils.getStyleFromHsl(color, opacity));\n        }\n        static getLinkColor(p1, p2, linkColor) {\n            var _a, _b;\n            if (linkColor === Constants_1.Constants.randomColorValue) {\n                return ColorUtils.getRandomRgbColor();\n            }\n            else if (linkColor === \"mid\") {\n                const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n                const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n                if (sourceColor && destColor && p2) {\n                    return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n                }\n                else {\n                    const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n                    if (hslColor) {\n                        return ColorUtils.hslToRgb(hslColor);\n                    }\n                }\n            }\n            else {\n                return linkColor;\n            }\n        }\n        static getLinkRandomColor(optColor, blink, consent) {\n            const color = typeof optColor === \"string\" ? optColor : optColor.value;\n            if (color === Constants_1.Constants.randomColorValue) {\n                if (consent) {\n                    return ColorUtils.colorToRgb({\n                        value: color,\n                    });\n                }\n                else if (blink) {\n                    return Constants_1.Constants.randomColorValue;\n                }\n                else {\n                    return Constants_1.Constants.midColorValue;\n                }\n            }\n            else {\n                return ColorUtils.colorToRgb({\n                    value: color,\n                });\n            }\n        }\n    }\n    exports.ColorUtils = ColorUtils;\n});\n"]},"metadata":{},"sourceType":"script"}