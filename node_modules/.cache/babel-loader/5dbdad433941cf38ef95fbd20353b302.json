{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"require\", \"exports\", \"./Links/Links\", \"./Move/Move\", \"./Number/ParticlesNumber\", \"./Opacity/Opacity\", \"./Shape/Shape\", \"./Size/Size\", \"./Rotate/Rotate\", \"./Shadow\", \"./Stroke\", \"./Collisions\", \"./Twinkle/Twinkle\", \"./AnimatableColor\", \"./Life/Life\", \"./Bounce/Bounce\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Particles = void 0;\n\n  const Links_1 = require(\"./Links/Links\");\n\n  const Move_1 = require(\"./Move/Move\");\n\n  const ParticlesNumber_1 = require(\"./Number/ParticlesNumber\");\n\n  const Opacity_1 = require(\"./Opacity/Opacity\");\n\n  const Shape_1 = require(\"./Shape/Shape\");\n\n  const Size_1 = require(\"./Size/Size\");\n\n  const Rotate_1 = require(\"./Rotate/Rotate\");\n\n  const Shadow_1 = require(\"./Shadow\");\n\n  const Stroke_1 = require(\"./Stroke\");\n\n  const Collisions_1 = require(\"./Collisions\");\n\n  const Twinkle_1 = require(\"./Twinkle/Twinkle\");\n\n  const AnimatableColor_1 = require(\"./AnimatableColor\");\n\n  const Life_1 = require(\"./Life/Life\");\n\n  const Bounce_1 = require(\"./Bounce/Bounce\");\n\n  class Particles {\n    constructor() {\n      this.bounce = new Bounce_1.Bounce();\n      this.collisions = new Collisions_1.Collisions();\n      this.color = new AnimatableColor_1.AnimatableColor();\n      this.life = new Life_1.Life();\n      this.links = new Links_1.Links();\n      this.move = new Move_1.Move();\n      this.number = new ParticlesNumber_1.ParticlesNumber();\n      this.opacity = new Opacity_1.Opacity();\n      this.reduceDuplicates = false;\n      this.rotate = new Rotate_1.Rotate();\n      this.shadow = new Shadow_1.Shadow();\n      this.shape = new Shape_1.Shape();\n      this.size = new Size_1.Size();\n      this.stroke = new Stroke_1.Stroke();\n      this.twinkle = new Twinkle_1.Twinkle();\n    }\n\n    get line_linked() {\n      return this.links;\n    }\n\n    set line_linked(value) {\n      this.links = value;\n    }\n\n    get lineLinked() {\n      return this.links;\n    }\n\n    set lineLinked(value) {\n      this.links = value;\n    }\n\n    load(data) {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      if (data === undefined) {\n        return;\n      }\n\n      this.bounce.load(data.bounce);\n      this.color = AnimatableColor_1.AnimatableColor.create(this.color, data.color);\n      this.life.load(data.life);\n      const links = (_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked;\n\n      if (links !== undefined) {\n        this.links.load(links);\n      }\n\n      this.move.load(data.move);\n      this.number.load(data.number);\n      this.opacity.load(data.opacity);\n\n      if (data.reduceDuplicates !== undefined) {\n        this.reduceDuplicates = data.reduceDuplicates;\n      }\n\n      this.rotate.load(data.rotate);\n      this.shape.load(data.shape);\n      this.size.load(data.size);\n      this.shadow.load(data.shadow);\n      this.twinkle.load(data.twinkle);\n      const collisions = (_d = (_c = data.move) === null || _c === void 0 ? void 0 : _c.collisions) !== null && _d !== void 0 ? _d : (_e = data.move) === null || _e === void 0 ? void 0 : _e.bounce;\n\n      if (collisions !== undefined) {\n        this.collisions.enable = collisions;\n      }\n\n      this.collisions.load(data.collisions);\n      const strokeToLoad = (_f = data.stroke) !== null && _f !== void 0 ? _f : (_g = data.shape) === null || _g === void 0 ? void 0 : _g.stroke;\n\n      if (strokeToLoad === undefined) {\n        return;\n      }\n\n      if (strokeToLoad instanceof Array) {\n        this.stroke = strokeToLoad.map(s => {\n          const tmp = new Stroke_1.Stroke();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.stroke instanceof Array) {\n          this.stroke = new Stroke_1.Stroke();\n        }\n\n        this.stroke.load(strokeToLoad);\n      }\n    }\n\n  }\n\n  exports.Particles = Particles;\n});","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/node_modules/tsparticles/dist/Options/Classes/Particles/Particles.js"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","Particles","Links_1","Move_1","ParticlesNumber_1","Opacity_1","Shape_1","Size_1","Rotate_1","Shadow_1","Stroke_1","Collisions_1","Twinkle_1","AnimatableColor_1","Life_1","Bounce_1","constructor","bounce","Bounce","collisions","Collisions","color","AnimatableColor","life","Life","links","Links","move","Move","number","ParticlesNumber","opacity","Opacity","reduceDuplicates","rotate","Rotate","shadow","Shadow","shape","Shape","size","Size","stroke","Stroke","twinkle","Twinkle","line_linked","lineLinked","load","data","_a","_b","_c","_d","_e","_f","_g","create","enable","strokeToLoad","Array","map","s","tmp"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./Links/Links\", \"./Move/Move\", \"./Number/ParticlesNumber\", \"./Opacity/Opacity\", \"./Shape/Shape\", \"./Size/Size\", \"./Rotate/Rotate\", \"./Shadow\", \"./Stroke\", \"./Collisions\", \"./Twinkle/Twinkle\", \"./AnimatableColor\", \"./Life/Life\", \"./Bounce/Bounce\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Particles = void 0;\n    const Links_1 = require(\"./Links/Links\");\n    const Move_1 = require(\"./Move/Move\");\n    const ParticlesNumber_1 = require(\"./Number/ParticlesNumber\");\n    const Opacity_1 = require(\"./Opacity/Opacity\");\n    const Shape_1 = require(\"./Shape/Shape\");\n    const Size_1 = require(\"./Size/Size\");\n    const Rotate_1 = require(\"./Rotate/Rotate\");\n    const Shadow_1 = require(\"./Shadow\");\n    const Stroke_1 = require(\"./Stroke\");\n    const Collisions_1 = require(\"./Collisions\");\n    const Twinkle_1 = require(\"./Twinkle/Twinkle\");\n    const AnimatableColor_1 = require(\"./AnimatableColor\");\n    const Life_1 = require(\"./Life/Life\");\n    const Bounce_1 = require(\"./Bounce/Bounce\");\n    class Particles {\n        constructor() {\n            this.bounce = new Bounce_1.Bounce();\n            this.collisions = new Collisions_1.Collisions();\n            this.color = new AnimatableColor_1.AnimatableColor();\n            this.life = new Life_1.Life();\n            this.links = new Links_1.Links();\n            this.move = new Move_1.Move();\n            this.number = new ParticlesNumber_1.ParticlesNumber();\n            this.opacity = new Opacity_1.Opacity();\n            this.reduceDuplicates = false;\n            this.rotate = new Rotate_1.Rotate();\n            this.shadow = new Shadow_1.Shadow();\n            this.shape = new Shape_1.Shape();\n            this.size = new Size_1.Size();\n            this.stroke = new Stroke_1.Stroke();\n            this.twinkle = new Twinkle_1.Twinkle();\n        }\n        get line_linked() {\n            return this.links;\n        }\n        set line_linked(value) {\n            this.links = value;\n        }\n        get lineLinked() {\n            return this.links;\n        }\n        set lineLinked(value) {\n            this.links = value;\n        }\n        load(data) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            if (data === undefined) {\n                return;\n            }\n            this.bounce.load(data.bounce);\n            this.color = AnimatableColor_1.AnimatableColor.create(this.color, data.color);\n            this.life.load(data.life);\n            const links = (_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked;\n            if (links !== undefined) {\n                this.links.load(links);\n            }\n            this.move.load(data.move);\n            this.number.load(data.number);\n            this.opacity.load(data.opacity);\n            if (data.reduceDuplicates !== undefined) {\n                this.reduceDuplicates = data.reduceDuplicates;\n            }\n            this.rotate.load(data.rotate);\n            this.shape.load(data.shape);\n            this.size.load(data.size);\n            this.shadow.load(data.shadow);\n            this.twinkle.load(data.twinkle);\n            const collisions = (_d = (_c = data.move) === null || _c === void 0 ? void 0 : _c.collisions) !== null && _d !== void 0 ? _d : (_e = data.move) === null || _e === void 0 ? void 0 : _e.bounce;\n            if (collisions !== undefined) {\n                this.collisions.enable = collisions;\n            }\n            this.collisions.load(data.collisions);\n            const strokeToLoad = (_f = data.stroke) !== null && _f !== void 0 ? _f : (_g = data.shape) === null || _g === void 0 ? void 0 : _g.stroke;\n            if (strokeToLoad === undefined) {\n                return;\n            }\n            if (strokeToLoad instanceof Array) {\n                this.stroke = strokeToLoad.map((s) => {\n                    const tmp = new Stroke_1.Stroke();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.stroke instanceof Array) {\n                    this.stroke = new Stroke_1.Stroke();\n                }\n                this.stroke.load(strokeToLoad);\n            }\n        }\n    }\n    exports.Particles = Particles;\n});\n"]},"metadata":{},"sourceType":"script"}